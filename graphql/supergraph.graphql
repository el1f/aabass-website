schema {
	query: Query
	mutation: Mutation
}

enum _FilterKind {
	search
	AND
	OR
	NOT
	eq
	eq_not
	in
	not_in
	lt
	lte
	gt
	gte
	contains
	not_contains
	starts_with
	not_starts_with
	ends_with
	not_ends_with
	contains_all
	contains_some
	contains_none
	relational_single
	relational_every
	relational_some
	relational_none
}

enum _MutationInputFieldKind {
	scalar
	richText
	richTextWithEmbeds
	enum
	relation
	union
	virtual
}

enum _MutationKind {
	create
	publish
	unpublish
	update
	upsert
	delete
	updateMany
	publishMany
	unpublishMany
	deleteMany
	schedulePublish
	scheduleUnpublish
}

enum _OrderDirection {
	asc
	desc
}

enum _RelationInputCardinality {
	one
	many
}

enum _RelationInputKind {
	create
	update
}

enum _RelationKind {
	regular
	union
}

enum _SystemDateTimeFieldVariation {
	base
	localization
	combined
}

type Aggregate {
	count: Int!
}

"""
Asset system model
"""
type Asset implements Node {
	"""
	System stage field
	"""
	stage: Stage!
	"""
	System Locale field
	"""
	locale: Locale!
	"""
	Get the other localizations for this document
	"""
	localizations(
		"""
		Potential locales that should be returned
		"""
		locales: [Locale!]! = [en]
		"""
		Decides if the current locale should be included or not
		"""
		includeCurrent: Boolean! = false
	): [Asset!]!
	"""
	Get the document in other stages
	"""
	documentInStages(
		"""
		Potential stages that should be returned
		"""
		stages: [Stage!]! = [DRAFT, PUBLISHED]
		"""
		Decides if the current stage should be included or not
		"""
		includeCurrent: Boolean! = false
		"""
		Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
		"""
		inheritLocale: Boolean! = false
	): [Asset!]!
	"""
	The mime type of the file
	"""
	mimeType: String
	"""
	The file size
	"""
	size: Float
	"""
	The file width
	"""
	width: Float
	"""
	The height of the file
	"""
	height: Float
	"""
	The file name
	"""
	fileName: String!
	"""
	The file handle
	"""
	handle: String!
	"""
	The time the document was published. Null on documents in draft stage.
	"""
	publishedAt(
		"""
		Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
		"""
		variation: SystemDateTimeFieldVariation! = COMBINED
	): DateTime
	"""
	The time the document was updated
	"""
	updatedAt(
		"""
		Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
		"""
		variation: SystemDateTimeFieldVariation! = COMBINED
	): DateTime!
	"""
	The time the document was created
	"""
	createdAt(
		"""
		Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
		"""
		variation: SystemDateTimeFieldVariation! = COMBINED
	): DateTime!
	"""
	The unique identifier
	"""
	id: ID!
	"""
	User that last published this document
	"""
	publishedBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	User that last updated this document
	"""
	updatedBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	User that created this document
	"""
	createdBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	coverThought(
		where: ThoughtWhereInput
		orderBy: ThoughtOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `coverThought` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): [Thought!]!
	scheduledIn(
		where: ScheduledOperationWhereInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): [ScheduledOperation!]!
	"""
	List of Asset versions
	"""
	history(
		limit: Int! = 10
		skip: Int! = 0
		"""
		This is optional and can be used to fetch the document version history for a specific stage instead of the current one
		"""
		stageOverride: Stage
	): [Version!]!
	"""
	Get the url for the asset with provided transformations applied.
	"""
	url(transformation: AssetTransformationInput): String!
}

input AssetConnectInput {
	"""
	Document to connect
	"""
	where: AssetWhereUniqueInput!
	"""
	Allow to specify document position in list of connected documents, will default to appending at end of list
	"""
	position: ConnectPositionInput
}

"""
A connection to a list of items.
"""
type AssetConnection {
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	A list of edges.
	"""
	edges: [AssetEdge!]!
	aggregate: Aggregate!
}

input AssetCreateInput {
	mimeType: String
	size: Float
	width: Float
	height: Float
	fileName: String!
	handle: String!
	updatedAt: DateTime
	createdAt: DateTime
	coverThought: ThoughtCreateManyInlineInput
	bagCoffee: CoffeeCreateManyInlineInput
	cafeCoffee: CoffeeCreateManyInlineInput
	drinkCoffee: CoffeeCreateManyInlineInput
	"""
	Inline mutations for managing document localizations excluding the default locale
	"""
	localizations: AssetCreateLocalizationsInput
}

input AssetCreateLocalizationDataInput {
	mimeType: String
	size: Float
	width: Float
	height: Float
	fileName: String!
	handle: String!
	updatedAt: DateTime
	createdAt: DateTime
}

input AssetCreateLocalizationInput {
	"""
	Localization input
	"""
	data: AssetCreateLocalizationDataInput!
	locale: Locale!
}

input AssetCreateLocalizationsInput {
	"""
	Create localizations for the newly-created document
	"""
	create: [AssetCreateLocalizationInput!]
}

input AssetCreateManyInlineInput {
	"""
	Create and connect multiple existing Asset documents
	"""
	create: [AssetCreateInput!]
	"""
	Connect multiple existing Asset documents
	"""
	connect: [AssetWhereUniqueInput!]
}

input AssetCreateOneInlineInput {
	"""
	Create and connect one Asset document
	"""
	create: AssetCreateInput
	"""
	Connect one existing Asset document
	"""
	connect: AssetWhereUniqueInput
}

"""
An edge in a connection.
"""
type AssetEdge {
	"""
	The item at the end of the edge.
	"""
	node: Asset!
	"""
	A cursor for use in pagination.
	"""
	cursor: String!
}

"""
Identifies documents
"""
input AssetManyWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [AssetWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [AssetWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [AssetWhereInput!]
	documentInStages_every: AssetWhereStageInput
	documentInStages_some: AssetWhereStageInput
	documentInStages_none: AssetWhereStageInput
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	publishedBy: UserWhereInput
	updatedBy: UserWhereInput
	createdBy: UserWhereInput
	coverThought_every: ThoughtWhereInput
	coverThought_some: ThoughtWhereInput
	coverThought_none: ThoughtWhereInput
	scheduledIn_every: ScheduledOperationWhereInput
	scheduledIn_some: ScheduledOperationWhereInput
	scheduledIn_none: ScheduledOperationWhereInput
}

enum AssetOrderByInput {
	mimeType_ASC
	mimeType_DESC
	size_ASC
	size_DESC
	width_ASC
	width_DESC
	height_ASC
	height_DESC
	fileName_ASC
	fileName_DESC
	handle_ASC
	handle_DESC
	publishedAt_ASC
	publishedAt_DESC
	updatedAt_ASC
	updatedAt_DESC
	createdAt_ASC
	createdAt_DESC
	id_ASC
	id_DESC
}

"""
Transformations for Assets
"""
input AssetTransformationInput {
	image: ImageTransformationInput
	document: DocumentTransformationInput
	"""
	Pass true if you want to validate the passed transformation parameters
	"""
	validateOptions: Boolean = false
}

input AssetUpdateInput {
	mimeType: String
	size: Float
	width: Float
	height: Float
	fileName: String
	handle: String
	coverThought: ThoughtUpdateManyInlineInput
	bagCoffee: CoffeeUpdateManyInlineInput
	cafeCoffee: CoffeeUpdateManyInlineInput
	drinkCoffee: CoffeeUpdateManyInlineInput
	"""
	Manage document localizations
	"""
	localizations: AssetUpdateLocalizationsInput
}

input AssetUpdateLocalizationDataInput {
	mimeType: String
	size: Float
	width: Float
	height: Float
	fileName: String
	handle: String
}

input AssetUpdateLocalizationInput {
	data: AssetUpdateLocalizationDataInput!
	locale: Locale!
}

input AssetUpdateLocalizationsInput {
	"""
	Localizations to create
	"""
	create: [AssetCreateLocalizationInput!]
	"""
	Localizations to update
	"""
	update: [AssetUpdateLocalizationInput!]
	upsert: [AssetUpsertLocalizationInput!]
	"""
	Localizations to delete
	"""
	delete: [Locale!]
}

input AssetUpdateManyInlineInput {
	"""
	Create and connect multiple Asset documents
	"""
	create: [AssetCreateInput!]
	"""
	Connect multiple existing Asset documents
	"""
	connect: [AssetConnectInput!]
	"""
	Override currently-connected documents with multiple existing Asset documents
	"""
	set: [AssetWhereUniqueInput!]
	"""
	Update multiple Asset documents
	"""
	update: [AssetUpdateWithNestedWhereUniqueInput!]
	"""
	Upsert multiple Asset documents
	"""
	upsert: [AssetUpsertWithNestedWhereUniqueInput!]
	"""
	Disconnect multiple Asset documents
	"""
	disconnect: [AssetWhereUniqueInput!]
	"""
	Delete multiple Asset documents
	"""
	delete: [AssetWhereUniqueInput!]
}

input AssetUpdateManyInput {
	mimeType: String
	size: Float
	width: Float
	height: Float
	fileName: String
	"""
	Optional updates to localizations
	"""
	localizations: AssetUpdateManyLocalizationsInput
}

input AssetUpdateManyLocalizationDataInput {
	mimeType: String
	size: Float
	width: Float
	height: Float
	fileName: String
}

input AssetUpdateManyLocalizationInput {
	data: AssetUpdateManyLocalizationDataInput!
	locale: Locale!
}

input AssetUpdateManyLocalizationsInput {
	"""
	Localizations to update
	"""
	update: [AssetUpdateManyLocalizationInput!]
}

input AssetUpdateManyWithNestedWhereInput {
	"""
	Document search
	"""
	where: AssetWhereInput!
	"""
	Update many input
	"""
	data: AssetUpdateManyInput!
}

input AssetUpdateOneInlineInput {
	"""
	Create and connect one Asset document
	"""
	create: AssetCreateInput
	"""
	Update single Asset document
	"""
	update: AssetUpdateWithNestedWhereUniqueInput
	"""
	Upsert single Asset document
	"""
	upsert: AssetUpsertWithNestedWhereUniqueInput
	"""
	Connect existing Asset document
	"""
	connect: AssetWhereUniqueInput
	"""
	Disconnect currently connected Asset document
	"""
	disconnect: Boolean
	"""
	Delete currently connected Asset document
	"""
	delete: Boolean
}

input AssetUpdateWithNestedWhereUniqueInput {
	"""
	Unique document search
	"""
	where: AssetWhereUniqueInput!
	"""
	Document to update
	"""
	data: AssetUpdateInput!
}

input AssetUpsertInput {
	"""
	Create document if it didn't exist
	"""
	create: AssetCreateInput!
	"""
	Update document if it exists
	"""
	update: AssetUpdateInput!
}

input AssetUpsertLocalizationInput {
	update: AssetUpdateLocalizationDataInput!
	create: AssetCreateLocalizationDataInput!
	locale: Locale!
}

input AssetUpsertWithNestedWhereUniqueInput {
	"""
	Unique document search
	"""
	where: AssetWhereUniqueInput!
	"""
	Upsert data
	"""
	data: AssetUpsertInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input AssetWhereComparatorInput {
	"""
	This field can be used to request to check if the entry is outdated by internal comparison
	"""
	outdated_to: Boolean
}

"""
Identifies documents
"""
input AssetWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [AssetWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [AssetWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [AssetWhereInput!]
	documentInStages_every: AssetWhereStageInput
	documentInStages_some: AssetWhereStageInput
	documentInStages_none: AssetWhereStageInput
	mimeType: String
	"""
	All values that are not equal to given value.
	"""
	mimeType_not: String
	"""
	All values that are contained in given list.
	"""
	mimeType_in: [String]
	"""
	All values that are not contained in given list.
	"""
	mimeType_not_in: [String]
	"""
	All values containing the given string.
	"""
	mimeType_contains: String
	"""
	All values not containing the given string.
	"""
	mimeType_not_contains: String
	"""
	All values starting with the given string.
	"""
	mimeType_starts_with: String
	"""
	All values not starting with the given string.
	"""
	mimeType_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	mimeType_ends_with: String
	"""
	All values not ending with the given string
	"""
	mimeType_not_ends_with: String
	size: Float
	"""
	All values that are not equal to given value.
	"""
	size_not: Float
	"""
	All values that are contained in given list.
	"""
	size_in: [Float]
	"""
	All values that are not contained in given list.
	"""
	size_not_in: [Float]
	"""
	All values less than the given value.
	"""
	size_lt: Float
	"""
	All values less than or equal the given value.
	"""
	size_lte: Float
	"""
	All values greater than the given value.
	"""
	size_gt: Float
	"""
	All values greater than or equal the given value.
	"""
	size_gte: Float
	width: Float
	"""
	All values that are not equal to given value.
	"""
	width_not: Float
	"""
	All values that are contained in given list.
	"""
	width_in: [Float]
	"""
	All values that are not contained in given list.
	"""
	width_not_in: [Float]
	"""
	All values less than the given value.
	"""
	width_lt: Float
	"""
	All values less than or equal the given value.
	"""
	width_lte: Float
	"""
	All values greater than the given value.
	"""
	width_gt: Float
	"""
	All values greater than or equal the given value.
	"""
	width_gte: Float
	height: Float
	"""
	All values that are not equal to given value.
	"""
	height_not: Float
	"""
	All values that are contained in given list.
	"""
	height_in: [Float]
	"""
	All values that are not contained in given list.
	"""
	height_not_in: [Float]
	"""
	All values less than the given value.
	"""
	height_lt: Float
	"""
	All values less than or equal the given value.
	"""
	height_lte: Float
	"""
	All values greater than the given value.
	"""
	height_gt: Float
	"""
	All values greater than or equal the given value.
	"""
	height_gte: Float
	fileName: String
	"""
	All values that are not equal to given value.
	"""
	fileName_not: String
	"""
	All values that are contained in given list.
	"""
	fileName_in: [String]
	"""
	All values that are not contained in given list.
	"""
	fileName_not_in: [String]
	"""
	All values containing the given string.
	"""
	fileName_contains: String
	"""
	All values not containing the given string.
	"""
	fileName_not_contains: String
	"""
	All values starting with the given string.
	"""
	fileName_starts_with: String
	"""
	All values not starting with the given string.
	"""
	fileName_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	fileName_ends_with: String
	"""
	All values not ending with the given string
	"""
	fileName_not_ends_with: String
	handle: String
	"""
	All values that are not equal to given value.
	"""
	handle_not: String
	"""
	All values that are contained in given list.
	"""
	handle_in: [String]
	"""
	All values that are not contained in given list.
	"""
	handle_not_in: [String]
	"""
	All values containing the given string.
	"""
	handle_contains: String
	"""
	All values not containing the given string.
	"""
	handle_not_contains: String
	"""
	All values starting with the given string.
	"""
	handle_starts_with: String
	"""
	All values not starting with the given string.
	"""
	handle_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	handle_ends_with: String
	"""
	All values not ending with the given string
	"""
	handle_not_ends_with: String
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	publishedBy: UserWhereInput
	updatedBy: UserWhereInput
	createdBy: UserWhereInput
	coverThought_every: ThoughtWhereInput
	coverThought_some: ThoughtWhereInput
	coverThought_none: ThoughtWhereInput
	scheduledIn_every: ScheduledOperationWhereInput
	scheduledIn_some: ScheduledOperationWhereInput
	scheduledIn_none: ScheduledOperationWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input AssetWhereStageInput {
	"""
	Logical AND on all given filters.
	"""
	AND: [AssetWhereStageInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [AssetWhereStageInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [AssetWhereStageInput!]
	"""
	Specify the stage to compare with
	"""
	stage: Stage
	"""
	This field contains fields which can be set as true or false to specify an internal comparison
	"""
	compareWithParent: AssetWhereComparatorInput
}

"""
References Asset record uniquely
"""
input AssetWhereUniqueInput {
	id: ID
}

type BatchPayload {
	"""
	The number of nodes that have been affected by the Batch operation.
	"""
	count: Long!
}

type Coffee {
	"""
	System stage field
	"""
	stage: Stage!
	"""
	The unique identifier
	"""
	id: ID!
	name: String
	origin: String
	producer: String
	roaster: String
	process: String
	type: String
	notes: [String!]!
	elevation: Int
	roastLevel: Int
	review: String
	bag(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `bag` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): Asset
	cafe(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `cafe` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): Asset
	drink(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `drink` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): Asset
}

input CoffeeConnectInput {
	"""
	Document to connect
	"""
	where: CoffeeWhereUniqueInput!
	"""
	Allow to specify document position in list of connected documents, will default to appending at end of list
	"""
	position: ConnectPositionInput
}

"""
A connection to a list of items.
"""
type CoffeeConnection {
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	A list of edges.
	"""
	edges: [CoffeeEdge!]!
	aggregate: Aggregate!
}

input CoffeeCreateInput {
	name: String
	origin: String
	producer: String
	roaster: String
	process: String
	type: String
	notes: [String!]
	elevation: Int
	roastLevel: Int
	review: String
	bag: AssetCreateOneInlineInput
	cafe: AssetCreateOneInlineInput
	drink: AssetCreateOneInlineInput
}

input CoffeeCreateManyInlineInput {
	"""
	Create and connect multiple existing Coffee documents
	"""
	create: [CoffeeCreateInput!]
}

input CoffeeCreateOneInlineInput {
	"""
	Create and connect one Coffee document
	"""
	create: CoffeeCreateInput
}

input CoffeeCreateWithPositionInput {
	"""
	Position in the list of existing component instances, will default to appending at the end of list
	"""
	position: ConnectPositionInput
	"""
	Document to create
	"""
	data: CoffeeCreateInput!
}

"""
An edge in a connection.
"""
type CoffeeEdge {
	"""
	The item at the end of the edge.
	"""
	node: Coffee!
	"""
	A cursor for use in pagination.
	"""
	cursor: String!
}

"""
Identifies documents
"""
input CoffeeManyWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [CoffeeWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [CoffeeWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [CoffeeWhereInput!]
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	name: String
	"""
	All values that are not equal to given value.
	"""
	name_not: String
	"""
	All values that are contained in given list.
	"""
	name_in: [String]
	"""
	All values that are not contained in given list.
	"""
	name_not_in: [String]
	"""
	All values containing the given string.
	"""
	name_contains: String
	"""
	All values not containing the given string.
	"""
	name_not_contains: String
	"""
	All values starting with the given string.
	"""
	name_starts_with: String
	"""
	All values not starting with the given string.
	"""
	name_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	name_ends_with: String
	"""
	All values not ending with the given string
	"""
	name_not_ends_with: String
	origin: String
	"""
	All values that are not equal to given value.
	"""
	origin_not: String
	"""
	All values that are contained in given list.
	"""
	origin_in: [String]
	"""
	All values that are not contained in given list.
	"""
	origin_not_in: [String]
	"""
	All values containing the given string.
	"""
	origin_contains: String
	"""
	All values not containing the given string.
	"""
	origin_not_contains: String
	"""
	All values starting with the given string.
	"""
	origin_starts_with: String
	"""
	All values not starting with the given string.
	"""
	origin_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	origin_ends_with: String
	"""
	All values not ending with the given string
	"""
	origin_not_ends_with: String
	producer: String
	"""
	All values that are not equal to given value.
	"""
	producer_not: String
	"""
	All values that are contained in given list.
	"""
	producer_in: [String]
	"""
	All values that are not contained in given list.
	"""
	producer_not_in: [String]
	"""
	All values containing the given string.
	"""
	producer_contains: String
	"""
	All values not containing the given string.
	"""
	producer_not_contains: String
	"""
	All values starting with the given string.
	"""
	producer_starts_with: String
	"""
	All values not starting with the given string.
	"""
	producer_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	producer_ends_with: String
	"""
	All values not ending with the given string
	"""
	producer_not_ends_with: String
	roaster: String
	"""
	All values that are not equal to given value.
	"""
	roaster_not: String
	"""
	All values that are contained in given list.
	"""
	roaster_in: [String]
	"""
	All values that are not contained in given list.
	"""
	roaster_not_in: [String]
	"""
	All values containing the given string.
	"""
	roaster_contains: String
	"""
	All values not containing the given string.
	"""
	roaster_not_contains: String
	"""
	All values starting with the given string.
	"""
	roaster_starts_with: String
	"""
	All values not starting with the given string.
	"""
	roaster_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	roaster_ends_with: String
	"""
	All values not ending with the given string
	"""
	roaster_not_ends_with: String
	process: String
	"""
	All values that are not equal to given value.
	"""
	process_not: String
	"""
	All values that are contained in given list.
	"""
	process_in: [String]
	"""
	All values that are not contained in given list.
	"""
	process_not_in: [String]
	"""
	All values containing the given string.
	"""
	process_contains: String
	"""
	All values not containing the given string.
	"""
	process_not_contains: String
	"""
	All values starting with the given string.
	"""
	process_starts_with: String
	"""
	All values not starting with the given string.
	"""
	process_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	process_ends_with: String
	"""
	All values not ending with the given string
	"""
	process_not_ends_with: String
	type: String
	"""
	All values that are not equal to given value.
	"""
	type_not: String
	"""
	All values that are contained in given list.
	"""
	type_in: [String]
	"""
	All values that are not contained in given list.
	"""
	type_not_in: [String]
	"""
	All values containing the given string.
	"""
	type_contains: String
	"""
	All values not containing the given string.
	"""
	type_not_contains: String
	"""
	All values starting with the given string.
	"""
	type_starts_with: String
	"""
	All values not starting with the given string.
	"""
	type_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	type_ends_with: String
	"""
	All values not ending with the given string
	"""
	type_not_ends_with: String
	"""
	Matches if the field array contains *all* items provided to the filter and order does match
	"""
	notes: [String!]
	"""
	Matches if the field array does not contains *all* items provided to the filter or order does not match
	"""
	notes_not: [String!]
	"""
	Matches if the field array contains *all* items provided to the filter
	"""
	notes_contains_all: [String!]
	"""
	Matches if the field array contains at least one item provided to the filter
	"""
	notes_contains_some: [String!]
	"""
	Matches if the field array does not contain any of the items provided to the filter
	"""
	notes_contains_none: [String!]
	elevation: Int
	"""
	All values that are not equal to given value.
	"""
	elevation_not: Int
	"""
	All values that are contained in given list.
	"""
	elevation_in: [Int]
	"""
	All values that are not contained in given list.
	"""
	elevation_not_in: [Int]
	"""
	All values less than the given value.
	"""
	elevation_lt: Int
	"""
	All values less than or equal the given value.
	"""
	elevation_lte: Int
	"""
	All values greater than the given value.
	"""
	elevation_gt: Int
	"""
	All values greater than or equal the given value.
	"""
	elevation_gte: Int
	roastLevel: Int
	"""
	All values that are not equal to given value.
	"""
	roastLevel_not: Int
	"""
	All values that are contained in given list.
	"""
	roastLevel_in: [Int]
	"""
	All values that are not contained in given list.
	"""
	roastLevel_not_in: [Int]
	"""
	All values less than the given value.
	"""
	roastLevel_lt: Int
	"""
	All values less than or equal the given value.
	"""
	roastLevel_lte: Int
	"""
	All values greater than the given value.
	"""
	roastLevel_gt: Int
	"""
	All values greater than or equal the given value.
	"""
	roastLevel_gte: Int
	review: String
	"""
	All values that are not equal to given value.
	"""
	review_not: String
	"""
	All values that are contained in given list.
	"""
	review_in: [String]
	"""
	All values that are not contained in given list.
	"""
	review_not_in: [String]
	"""
	All values containing the given string.
	"""
	review_contains: String
	"""
	All values not containing the given string.
	"""
	review_not_contains: String
	"""
	All values starting with the given string.
	"""
	review_starts_with: String
	"""
	All values not starting with the given string.
	"""
	review_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	review_ends_with: String
	"""
	All values not ending with the given string
	"""
	review_not_ends_with: String
	bag: AssetWhereInput
	cafe: AssetWhereInput
	drink: AssetWhereInput
}

enum CoffeeOrderByInput {
	id_ASC
	id_DESC
	name_ASC
	name_DESC
	origin_ASC
	origin_DESC
	producer_ASC
	producer_DESC
	roaster_ASC
	roaster_DESC
	process_ASC
	process_DESC
	type_ASC
	type_DESC
	notes_ASC
	notes_DESC
	elevation_ASC
	elevation_DESC
	roastLevel_ASC
	roastLevel_DESC
	review_ASC
	review_DESC
}

input CoffeeUpdateInput {
	name: String
	origin: String
	producer: String
	roaster: String
	process: String
	type: String
	notes: [String!]
	elevation: Int
	roastLevel: Int
	review: String
	bag: AssetUpdateOneInlineInput
	cafe: AssetUpdateOneInlineInput
	drink: AssetUpdateOneInlineInput
}

input CoffeeUpdateManyInlineInput {
	"""
	Create and connect multiple Coffee component instances
	"""
	create: [CoffeeCreateWithPositionInput!]
	"""
	Update multiple Coffee component instances
	"""
	update: [CoffeeUpdateWithNestedWhereUniqueAndPositionInput!]
	"""
	Upsert multiple Coffee component instances
	"""
	upsert: [CoffeeUpsertWithNestedWhereUniqueAndPositionInput!]
	"""
	Delete multiple Coffee documents
	"""
	delete: [CoffeeWhereUniqueInput!]
}

input CoffeeUpdateManyInput {
	name: String
	origin: String
	producer: String
	roaster: String
	process: String
	type: String
	notes: [String!]
	elevation: Int
	roastLevel: Int
	review: String
}

input CoffeeUpdateManyWithNestedWhereInput {
	"""
	Document search
	"""
	where: CoffeeWhereInput!
	"""
	Update many input
	"""
	data: CoffeeUpdateManyInput!
}

input CoffeeUpdateOneInlineInput {
	"""
	Create and connect one Coffee document
	"""
	create: CoffeeCreateInput
	"""
	Update single Coffee document
	"""
	update: CoffeeUpdateWithNestedWhereUniqueInput
	"""
	Upsert single Coffee document
	"""
	upsert: CoffeeUpsertWithNestedWhereUniqueInput
	"""
	Delete currently connected Coffee document
	"""
	delete: Boolean
}

input CoffeeUpdateWithNestedWhereUniqueAndPositionInput {
	"""
	Unique component instance search
	"""
	where: CoffeeWhereUniqueInput!
	"""
	Position in the list of existing component instances, will default to appending at the end of list
	"""
	position: ConnectPositionInput
	"""
	Document to update
	"""
	data: CoffeeUpdateInput
}

input CoffeeUpdateWithNestedWhereUniqueInput {
	"""
	Unique document search
	"""
	where: CoffeeWhereUniqueInput!
	"""
	Document to update
	"""
	data: CoffeeUpdateInput!
}

input CoffeeUpsertInput {
	"""
	Create document if it didn't exist
	"""
	create: CoffeeCreateInput!
	"""
	Update document if it exists
	"""
	update: CoffeeUpdateInput!
}

input CoffeeUpsertWithNestedWhereUniqueAndPositionInput {
	"""
	Unique component instance search
	"""
	where: CoffeeWhereUniqueInput!
	"""
	Position in the list of existing component instances, will default to appending at the end of list
	"""
	position: ConnectPositionInput
	"""
	Document to upsert
	"""
	data: CoffeeUpsertInput
}

input CoffeeUpsertWithNestedWhereUniqueInput {
	"""
	Unique document search
	"""
	where: CoffeeWhereUniqueInput!
	"""
	Upsert data
	"""
	data: CoffeeUpsertInput!
}

"""
Identifies documents
"""
input CoffeeWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [CoffeeWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [CoffeeWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [CoffeeWhereInput!]
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	name: String
	"""
	All values that are not equal to given value.
	"""
	name_not: String
	"""
	All values that are contained in given list.
	"""
	name_in: [String]
	"""
	All values that are not contained in given list.
	"""
	name_not_in: [String]
	"""
	All values containing the given string.
	"""
	name_contains: String
	"""
	All values not containing the given string.
	"""
	name_not_contains: String
	"""
	All values starting with the given string.
	"""
	name_starts_with: String
	"""
	All values not starting with the given string.
	"""
	name_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	name_ends_with: String
	"""
	All values not ending with the given string
	"""
	name_not_ends_with: String
	origin: String
	"""
	All values that are not equal to given value.
	"""
	origin_not: String
	"""
	All values that are contained in given list.
	"""
	origin_in: [String]
	"""
	All values that are not contained in given list.
	"""
	origin_not_in: [String]
	"""
	All values containing the given string.
	"""
	origin_contains: String
	"""
	All values not containing the given string.
	"""
	origin_not_contains: String
	"""
	All values starting with the given string.
	"""
	origin_starts_with: String
	"""
	All values not starting with the given string.
	"""
	origin_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	origin_ends_with: String
	"""
	All values not ending with the given string
	"""
	origin_not_ends_with: String
	producer: String
	"""
	All values that are not equal to given value.
	"""
	producer_not: String
	"""
	All values that are contained in given list.
	"""
	producer_in: [String]
	"""
	All values that are not contained in given list.
	"""
	producer_not_in: [String]
	"""
	All values containing the given string.
	"""
	producer_contains: String
	"""
	All values not containing the given string.
	"""
	producer_not_contains: String
	"""
	All values starting with the given string.
	"""
	producer_starts_with: String
	"""
	All values not starting with the given string.
	"""
	producer_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	producer_ends_with: String
	"""
	All values not ending with the given string
	"""
	producer_not_ends_with: String
	roaster: String
	"""
	All values that are not equal to given value.
	"""
	roaster_not: String
	"""
	All values that are contained in given list.
	"""
	roaster_in: [String]
	"""
	All values that are not contained in given list.
	"""
	roaster_not_in: [String]
	"""
	All values containing the given string.
	"""
	roaster_contains: String
	"""
	All values not containing the given string.
	"""
	roaster_not_contains: String
	"""
	All values starting with the given string.
	"""
	roaster_starts_with: String
	"""
	All values not starting with the given string.
	"""
	roaster_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	roaster_ends_with: String
	"""
	All values not ending with the given string
	"""
	roaster_not_ends_with: String
	process: String
	"""
	All values that are not equal to given value.
	"""
	process_not: String
	"""
	All values that are contained in given list.
	"""
	process_in: [String]
	"""
	All values that are not contained in given list.
	"""
	process_not_in: [String]
	"""
	All values containing the given string.
	"""
	process_contains: String
	"""
	All values not containing the given string.
	"""
	process_not_contains: String
	"""
	All values starting with the given string.
	"""
	process_starts_with: String
	"""
	All values not starting with the given string.
	"""
	process_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	process_ends_with: String
	"""
	All values not ending with the given string
	"""
	process_not_ends_with: String
	type: String
	"""
	All values that are not equal to given value.
	"""
	type_not: String
	"""
	All values that are contained in given list.
	"""
	type_in: [String]
	"""
	All values that are not contained in given list.
	"""
	type_not_in: [String]
	"""
	All values containing the given string.
	"""
	type_contains: String
	"""
	All values not containing the given string.
	"""
	type_not_contains: String
	"""
	All values starting with the given string.
	"""
	type_starts_with: String
	"""
	All values not starting with the given string.
	"""
	type_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	type_ends_with: String
	"""
	All values not ending with the given string
	"""
	type_not_ends_with: String
	"""
	Matches if the field array contains *all* items provided to the filter and order does match
	"""
	notes: [String!]
	"""
	Matches if the field array does not contains *all* items provided to the filter or order does not match
	"""
	notes_not: [String!]
	"""
	Matches if the field array contains *all* items provided to the filter
	"""
	notes_contains_all: [String!]
	"""
	Matches if the field array contains at least one item provided to the filter
	"""
	notes_contains_some: [String!]
	"""
	Matches if the field array does not contain any of the items provided to the filter
	"""
	notes_contains_none: [String!]
	elevation: Int
	"""
	All values that are not equal to given value.
	"""
	elevation_not: Int
	"""
	All values that are contained in given list.
	"""
	elevation_in: [Int]
	"""
	All values that are not contained in given list.
	"""
	elevation_not_in: [Int]
	"""
	All values less than the given value.
	"""
	elevation_lt: Int
	"""
	All values less than or equal the given value.
	"""
	elevation_lte: Int
	"""
	All values greater than the given value.
	"""
	elevation_gt: Int
	"""
	All values greater than or equal the given value.
	"""
	elevation_gte: Int
	roastLevel: Int
	"""
	All values that are not equal to given value.
	"""
	roastLevel_not: Int
	"""
	All values that are contained in given list.
	"""
	roastLevel_in: [Int]
	"""
	All values that are not contained in given list.
	"""
	roastLevel_not_in: [Int]
	"""
	All values less than the given value.
	"""
	roastLevel_lt: Int
	"""
	All values less than or equal the given value.
	"""
	roastLevel_lte: Int
	"""
	All values greater than the given value.
	"""
	roastLevel_gt: Int
	"""
	All values greater than or equal the given value.
	"""
	roastLevel_gte: Int
	review: String
	"""
	All values that are not equal to given value.
	"""
	review_not: String
	"""
	All values that are contained in given list.
	"""
	review_in: [String]
	"""
	All values that are not contained in given list.
	"""
	review_not_in: [String]
	"""
	All values containing the given string.
	"""
	review_contains: String
	"""
	All values not containing the given string.
	"""
	review_not_contains: String
	"""
	All values starting with the given string.
	"""
	review_starts_with: String
	"""
	All values not starting with the given string.
	"""
	review_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	review_ends_with: String
	"""
	All values not ending with the given string
	"""
	review_not_ends_with: String
	bag: AssetWhereInput
	cafe: AssetWhereInput
	drink: AssetWhereInput
}

"""
References Coffee record uniquely
"""
input CoffeeWhereUniqueInput {
	id: ID
}

"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type Color {
	hex: Hex!
	rgba: RGBA!
	css: String!
}

"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input ColorInput {
	hex: Hex
	rgba: RGBAInput
}

enum COMPONENT {
	PAGE_LAYOUT
}

input ConnectPositionInput {
	"""
	Connect document after specified document
	"""
	after: ID
	"""
	Connect document before specified document
	"""
	before: ID
	"""
	Connect document at first position
	"""
	start: Boolean
	"""
	Connect document at last position
	"""
	end: Boolean
}

"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime

enum DocumentFileTypes {
	jpg
	odp
	ods
	odt
	png
	svg
	txt
	webp
	docx
	pdf
	html
	doc
	xlsx
	xls
	pptx
	ppt
}

input DocumentOutputInput {
	"""
	Transforms a document into a desired file type.
	See this matrix for format support:

	PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
	DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
	DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
	ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
	XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
	XLSX:	jpg, pdf, ods, png, svg, xls, and webp
	ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
	PPT:	jpg, odp, pdf, png, svg, pptx, and webp
	PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
	ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
	BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
	GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
	JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
	PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
	WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
	TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
	AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
	PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
	SVG:	jpg, odp, ods, odt, pdf, png, and webp
	HTML:	jpg, odt, pdf, svg, txt, and webp
	TXT:	jpg, html, odt, pdf, svg, and webp
	"""
	format: DocumentFileTypes
}

"""
Transformations for Documents
"""
input DocumentTransformationInput {
	"""
	Changes the output for the file.
	"""
	output: DocumentOutputInput
}

type DocumentVersion {
	id: ID!
	stage: Stage!
	revision: Int!
	createdAt: DateTime!
	data: Json
}

scalar Hex

"""
The concepts that I want to develop further in the website.
"""
type Idea implements Node {
	"""
	System stage field
	"""
	stage: Stage!
	"""
	System Locale field
	"""
	locale: Locale!
	"""
	Get the other localizations for this document
	"""
	localizations(
		"""
		Potential locales that should be returned
		"""
		locales: [Locale!]! = [en]
		"""
		Decides if the current locale should be included or not
		"""
		includeCurrent: Boolean! = false
	): [Idea!]!
	"""
	Get the document in other stages
	"""
	documentInStages(
		"""
		Potential stages that should be returned
		"""
		stages: [Stage!]! = [DRAFT, PUBLISHED]
		"""
		Decides if the current stage should be included or not
		"""
		includeCurrent: Boolean! = false
		"""
		Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
		"""
		inheritLocale: Boolean! = false
	): [Idea!]!
	"""
	The time the document was published. Null on documents in draft stage.
	"""
	publishedAt(
		"""
		Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
		"""
		variation: SystemDateTimeFieldVariation! = COMBINED
	): DateTime
	"""
	The time the document was updated
	"""
	updatedAt(
		"""
		Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
		"""
		variation: SystemDateTimeFieldVariation! = COMBINED
	): DateTime!
	"""
	The time the document was created
	"""
	createdAt(
		"""
		Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
		"""
		variation: SystemDateTimeFieldVariation! = COMBINED
	): DateTime!
	"""
	The unique identifier
	"""
	id: ID!
	"""
	The name of the feature that I want to create
	"""
	summary: String!
	description: String!
	targetVersion: String!
	"""
	User that last published this document
	"""
	publishedBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	User that last updated this document
	"""
	updatedBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	User that created this document
	"""
	createdBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	dependencies(
		where: IdeaWhereInput
		orderBy: IdeaOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `dependencies` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): [Idea!]!
	targetPages: [PAGE!]!
	targetComponents: [COMPONENT!]!
	ideaStatus: IDEA_STATUS!
	scheduledIn(
		where: ScheduledOperationWhereInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): [ScheduledOperation!]!
	"""
	List of Idea versions
	"""
	history(
		limit: Int! = 10
		skip: Int! = 0
		"""
		This is optional and can be used to fetch the document version history for a specific stage instead of the current one
		"""
		stageOverride: Stage
	): [Version!]!
}

enum IDEA_STATUS {
	PENDING
	IN_PROGRESS
	TESTING
	DONE
}

input IdeaConnectInput {
	"""
	Document to connect
	"""
	where: IdeaWhereUniqueInput!
	"""
	Allow to specify document position in list of connected documents, will default to appending at end of list
	"""
	position: ConnectPositionInput
}

"""
A connection to a list of items.
"""
type IdeaConnection {
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	A list of edges.
	"""
	edges: [IdeaEdge!]!
	aggregate: Aggregate!
}

input IdeaCreateInput {
	updatedAt: DateTime
	createdAt: DateTime
	"""
	summary input for default locale (en)
	"""
	summary: String!
	"""
	description input for default locale (en)
	"""
	description: String!
	targetVersion: String!
	clauyj7j42cfq01t12zhcg69m: IdeaCreateManyInlineInput
	dependencies: IdeaCreateManyInlineInput
	targetPages: [PAGE!]
	targetComponents: [COMPONENT!]
	ideaStatus: IDEA_STATUS!
	"""
	Inline mutations for managing document localizations excluding the default locale
	"""
	localizations: IdeaCreateLocalizationsInput
}

input IdeaCreateLocalizationDataInput {
	updatedAt: DateTime
	createdAt: DateTime
	summary: String!
	description: String!
}

input IdeaCreateLocalizationInput {
	"""
	Localization input
	"""
	data: IdeaCreateLocalizationDataInput!
	locale: Locale!
}

input IdeaCreateLocalizationsInput {
	"""
	Create localizations for the newly-created document
	"""
	create: [IdeaCreateLocalizationInput!]
}

input IdeaCreateManyInlineInput {
	"""
	Create and connect multiple existing Idea documents
	"""
	create: [IdeaCreateInput!]
	"""
	Connect multiple existing Idea documents
	"""
	connect: [IdeaWhereUniqueInput!]
}

input IdeaCreateOneInlineInput {
	"""
	Create and connect one Idea document
	"""
	create: IdeaCreateInput
	"""
	Connect one existing Idea document
	"""
	connect: IdeaWhereUniqueInput
}

"""
An edge in a connection.
"""
type IdeaEdge {
	"""
	The item at the end of the edge.
	"""
	node: Idea!
	"""
	A cursor for use in pagination.
	"""
	cursor: String!
}

"""
Identifies documents
"""
input IdeaManyWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [IdeaWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [IdeaWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [IdeaWhereInput!]
	documentInStages_every: IdeaWhereStageInput
	documentInStages_some: IdeaWhereStageInput
	documentInStages_none: IdeaWhereStageInput
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	targetVersion: String
	"""
	All values that are not equal to given value.
	"""
	targetVersion_not: String
	"""
	All values that are contained in given list.
	"""
	targetVersion_in: [String]
	"""
	All values that are not contained in given list.
	"""
	targetVersion_not_in: [String]
	"""
	All values containing the given string.
	"""
	targetVersion_contains: String
	"""
	All values not containing the given string.
	"""
	targetVersion_not_contains: String
	"""
	All values starting with the given string.
	"""
	targetVersion_starts_with: String
	"""
	All values not starting with the given string.
	"""
	targetVersion_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	targetVersion_ends_with: String
	"""
	All values not ending with the given string
	"""
	targetVersion_not_ends_with: String
	publishedBy: UserWhereInput
	updatedBy: UserWhereInput
	createdBy: UserWhereInput
	dependencies_every: IdeaWhereInput
	dependencies_some: IdeaWhereInput
	dependencies_none: IdeaWhereInput
	"""
	Matches if the field array contains *all* items provided to the filter and order does match
	"""
	targetPages: [PAGE!]
	"""
	Matches if the field array does not contains *all* items provided to the filter or order does not match
	"""
	targetPages_not: [PAGE!]
	"""
	Matches if the field array contains *all* items provided to the filter
	"""
	targetPages_contains_all: [PAGE!]
	"""
	Matches if the field array contains at least one item provided to the filter
	"""
	targetPages_contains_some: [PAGE!]
	"""
	Matches if the field array does not contain any of the items provided to the filter
	"""
	targetPages_contains_none: [PAGE!]
	"""
	Matches if the field array contains *all* items provided to the filter and order does match
	"""
	targetComponents: [COMPONENT!]
	"""
	Matches if the field array does not contains *all* items provided to the filter or order does not match
	"""
	targetComponents_not: [COMPONENT!]
	"""
	Matches if the field array contains *all* items provided to the filter
	"""
	targetComponents_contains_all: [COMPONENT!]
	"""
	Matches if the field array contains at least one item provided to the filter
	"""
	targetComponents_contains_some: [COMPONENT!]
	"""
	Matches if the field array does not contain any of the items provided to the filter
	"""
	targetComponents_contains_none: [COMPONENT!]
	ideaStatus: IDEA_STATUS
	"""
	All values that are not equal to given value.
	"""
	ideaStatus_not: IDEA_STATUS
	"""
	All values that are contained in given list.
	"""
	ideaStatus_in: [IDEA_STATUS]
	"""
	All values that are not contained in given list.
	"""
	ideaStatus_not_in: [IDEA_STATUS]
	scheduledIn_every: ScheduledOperationWhereInput
	scheduledIn_some: ScheduledOperationWhereInput
	scheduledIn_none: ScheduledOperationWhereInput
}

enum IdeaOrderByInput {
	publishedAt_ASC
	publishedAt_DESC
	updatedAt_ASC
	updatedAt_DESC
	createdAt_ASC
	createdAt_DESC
	id_ASC
	id_DESC
	summary_ASC
	summary_DESC
	description_ASC
	description_DESC
	targetVersion_ASC
	targetVersion_DESC
	targetPages_ASC
	targetPages_DESC
	targetComponents_ASC
	targetComponents_DESC
	ideaStatus_ASC
	ideaStatus_DESC
}

input IdeaUpdateInput {
	"""
	summary input for default locale (en)
	"""
	summary: String
	"""
	description input for default locale (en)
	"""
	description: String
	targetVersion: String
	clauyj7j42cfq01t12zhcg69m: IdeaUpdateManyInlineInput
	dependencies: IdeaUpdateManyInlineInput
	targetPages: [PAGE!]
	targetComponents: [COMPONENT!]
	ideaStatus: IDEA_STATUS
	"""
	Manage document localizations
	"""
	localizations: IdeaUpdateLocalizationsInput
}

input IdeaUpdateLocalizationDataInput {
	summary: String
	description: String
}

input IdeaUpdateLocalizationInput {
	data: IdeaUpdateLocalizationDataInput!
	locale: Locale!
}

input IdeaUpdateLocalizationsInput {
	"""
	Localizations to create
	"""
	create: [IdeaCreateLocalizationInput!]
	"""
	Localizations to update
	"""
	update: [IdeaUpdateLocalizationInput!]
	upsert: [IdeaUpsertLocalizationInput!]
	"""
	Localizations to delete
	"""
	delete: [Locale!]
}

input IdeaUpdateManyInlineInput {
	"""
	Create and connect multiple Idea documents
	"""
	create: [IdeaCreateInput!]
	"""
	Connect multiple existing Idea documents
	"""
	connect: [IdeaConnectInput!]
	"""
	Override currently-connected documents with multiple existing Idea documents
	"""
	set: [IdeaWhereUniqueInput!]
	"""
	Update multiple Idea documents
	"""
	update: [IdeaUpdateWithNestedWhereUniqueInput!]
	"""
	Upsert multiple Idea documents
	"""
	upsert: [IdeaUpsertWithNestedWhereUniqueInput!]
	"""
	Disconnect multiple Idea documents
	"""
	disconnect: [IdeaWhereUniqueInput!]
	"""
	Delete multiple Idea documents
	"""
	delete: [IdeaWhereUniqueInput!]
}

input IdeaUpdateManyInput {
	"""
	description input for default locale (en)
	"""
	description: String
	targetVersion: String
	targetPages: [PAGE!]
	targetComponents: [COMPONENT!]
	ideaStatus: IDEA_STATUS
	"""
	Optional updates to localizations
	"""
	localizations: IdeaUpdateManyLocalizationsInput
}

input IdeaUpdateManyLocalizationDataInput {
	description: String
}

input IdeaUpdateManyLocalizationInput {
	data: IdeaUpdateManyLocalizationDataInput!
	locale: Locale!
}

input IdeaUpdateManyLocalizationsInput {
	"""
	Localizations to update
	"""
	update: [IdeaUpdateManyLocalizationInput!]
}

input IdeaUpdateManyWithNestedWhereInput {
	"""
	Document search
	"""
	where: IdeaWhereInput!
	"""
	Update many input
	"""
	data: IdeaUpdateManyInput!
}

input IdeaUpdateOneInlineInput {
	"""
	Create and connect one Idea document
	"""
	create: IdeaCreateInput
	"""
	Update single Idea document
	"""
	update: IdeaUpdateWithNestedWhereUniqueInput
	"""
	Upsert single Idea document
	"""
	upsert: IdeaUpsertWithNestedWhereUniqueInput
	"""
	Connect existing Idea document
	"""
	connect: IdeaWhereUniqueInput
	"""
	Disconnect currently connected Idea document
	"""
	disconnect: Boolean
	"""
	Delete currently connected Idea document
	"""
	delete: Boolean
}

input IdeaUpdateWithNestedWhereUniqueInput {
	"""
	Unique document search
	"""
	where: IdeaWhereUniqueInput!
	"""
	Document to update
	"""
	data: IdeaUpdateInput!
}

input IdeaUpsertInput {
	"""
	Create document if it didn't exist
	"""
	create: IdeaCreateInput!
	"""
	Update document if it exists
	"""
	update: IdeaUpdateInput!
}

input IdeaUpsertLocalizationInput {
	update: IdeaUpdateLocalizationDataInput!
	create: IdeaCreateLocalizationDataInput!
	locale: Locale!
}

input IdeaUpsertWithNestedWhereUniqueInput {
	"""
	Unique document search
	"""
	where: IdeaWhereUniqueInput!
	"""
	Upsert data
	"""
	data: IdeaUpsertInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input IdeaWhereComparatorInput {
	"""
	This field can be used to request to check if the entry is outdated by internal comparison
	"""
	outdated_to: Boolean
}

"""
Identifies documents
"""
input IdeaWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [IdeaWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [IdeaWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [IdeaWhereInput!]
	documentInStages_every: IdeaWhereStageInput
	documentInStages_some: IdeaWhereStageInput
	documentInStages_none: IdeaWhereStageInput
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	summary: String
	"""
	All values that are not equal to given value.
	"""
	summary_not: String
	"""
	All values that are contained in given list.
	"""
	summary_in: [String]
	"""
	All values that are not contained in given list.
	"""
	summary_not_in: [String]
	"""
	All values containing the given string.
	"""
	summary_contains: String
	"""
	All values not containing the given string.
	"""
	summary_not_contains: String
	"""
	All values starting with the given string.
	"""
	summary_starts_with: String
	"""
	All values not starting with the given string.
	"""
	summary_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	summary_ends_with: String
	"""
	All values not ending with the given string
	"""
	summary_not_ends_with: String
	description: String
	"""
	All values that are not equal to given value.
	"""
	description_not: String
	"""
	All values that are contained in given list.
	"""
	description_in: [String]
	"""
	All values that are not contained in given list.
	"""
	description_not_in: [String]
	"""
	All values containing the given string.
	"""
	description_contains: String
	"""
	All values not containing the given string.
	"""
	description_not_contains: String
	"""
	All values starting with the given string.
	"""
	description_starts_with: String
	"""
	All values not starting with the given string.
	"""
	description_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	description_ends_with: String
	"""
	All values not ending with the given string
	"""
	description_not_ends_with: String
	targetVersion: String
	"""
	All values that are not equal to given value.
	"""
	targetVersion_not: String
	"""
	All values that are contained in given list.
	"""
	targetVersion_in: [String]
	"""
	All values that are not contained in given list.
	"""
	targetVersion_not_in: [String]
	"""
	All values containing the given string.
	"""
	targetVersion_contains: String
	"""
	All values not containing the given string.
	"""
	targetVersion_not_contains: String
	"""
	All values starting with the given string.
	"""
	targetVersion_starts_with: String
	"""
	All values not starting with the given string.
	"""
	targetVersion_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	targetVersion_ends_with: String
	"""
	All values not ending with the given string
	"""
	targetVersion_not_ends_with: String
	publishedBy: UserWhereInput
	updatedBy: UserWhereInput
	createdBy: UserWhereInput
	dependencies_every: IdeaWhereInput
	dependencies_some: IdeaWhereInput
	dependencies_none: IdeaWhereInput
	"""
	Matches if the field array contains *all* items provided to the filter and order does match
	"""
	targetPages: [PAGE!]
	"""
	Matches if the field array does not contains *all* items provided to the filter or order does not match
	"""
	targetPages_not: [PAGE!]
	"""
	Matches if the field array contains *all* items provided to the filter
	"""
	targetPages_contains_all: [PAGE!]
	"""
	Matches if the field array contains at least one item provided to the filter
	"""
	targetPages_contains_some: [PAGE!]
	"""
	Matches if the field array does not contain any of the items provided to the filter
	"""
	targetPages_contains_none: [PAGE!]
	"""
	Matches if the field array contains *all* items provided to the filter and order does match
	"""
	targetComponents: [COMPONENT!]
	"""
	Matches if the field array does not contains *all* items provided to the filter or order does not match
	"""
	targetComponents_not: [COMPONENT!]
	"""
	Matches if the field array contains *all* items provided to the filter
	"""
	targetComponents_contains_all: [COMPONENT!]
	"""
	Matches if the field array contains at least one item provided to the filter
	"""
	targetComponents_contains_some: [COMPONENT!]
	"""
	Matches if the field array does not contain any of the items provided to the filter
	"""
	targetComponents_contains_none: [COMPONENT!]
	ideaStatus: IDEA_STATUS
	"""
	All values that are not equal to given value.
	"""
	ideaStatus_not: IDEA_STATUS
	"""
	All values that are contained in given list.
	"""
	ideaStatus_in: [IDEA_STATUS]
	"""
	All values that are not contained in given list.
	"""
	ideaStatus_not_in: [IDEA_STATUS]
	scheduledIn_every: ScheduledOperationWhereInput
	scheduledIn_some: ScheduledOperationWhereInput
	scheduledIn_none: ScheduledOperationWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input IdeaWhereStageInput {
	"""
	Logical AND on all given filters.
	"""
	AND: [IdeaWhereStageInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [IdeaWhereStageInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [IdeaWhereStageInput!]
	"""
	Specify the stage to compare with
	"""
	stage: Stage
	"""
	This field contains fields which can be set as true or false to specify an internal comparison
	"""
	compareWithParent: IdeaWhereComparatorInput
}

"""
References Idea record uniquely
"""
input IdeaWhereUniqueInput {
	id: ID
}

enum ImageFit {
	"""
	Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
	"""
	clip
	"""
	Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
	"""
	crop
	"""
	Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
	"""
	scale
	"""
	Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.
	"""
	max
}

input ImageResizeInput {
	"""
	The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
	"""
	width: Int
	"""
	The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
	"""
	height: Int
	"""
	The default value for the fit parameter is fit:clip.
	"""
	fit: ImageFit
}

"""
Transformations for Images
"""
input ImageTransformationInput {
	"""
	Resizes the image
	"""
	resize: ImageResizeInput
}

"""
Raw JSON value
"""
scalar Json

"""
Locale system enumeration
"""
enum Locale {
	"""
	System locale
	"""
	en
}

type LocalizedString {
	en: String
	it: String
}

input LocalizedStringInput {
	en: String
	it: String
}

"""
Representing a geolocation point with latitude and longitude
"""
type Location {
	latitude: Float!
	longitude: Float!
	distance(from: LocationInput!): Float!
}

"""
Input for a geolocation point with latitude and longitude
"""
input LocationInput {
	latitude: Float!
	longitude: Float!
}

"""
The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
	"""
	Create one asset
	"""
	createAsset(data: AssetCreateInput!): Asset
		@deprecated(reason: "Asset mutations will be overhauled soon")
	"""
	Update one asset
	"""
	updateAsset(where: AssetWhereUniqueInput!, data: AssetUpdateInput!): Asset
	"""
	Delete one asset from _all_ existing stages. Returns deleted document.
	"""
	deleteAsset(
		"""
		Document to delete
		"""
		where: AssetWhereUniqueInput!
	): Asset
	"""
	Upsert one asset
	"""
	upsertAsset(where: AssetWhereUniqueInput!, upsert: AssetUpsertInput!): Asset
	"""
	Publish one asset
	"""
	publishAsset(
		"""
		Document to publish
		"""
		where: AssetWhereUniqueInput!
		"""
		Optional localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is set
		"""
		withDefaultLocale: Boolean = true
		"""
		Publishing target stage
		"""
		to: [Stage!]! = [PUBLISHED]
	): Asset
	"""
	Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
	"""
	unpublishAsset(
		"""
		Document to unpublish
		"""
		where: AssetWhereUniqueInput!
		"""
		Stages to unpublish document from
		"""
		from: [Stage!]! = [PUBLISHED]
		"""
		Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
		"""
		locales: [Locale!]
		"""
		Unpublish complete document including default localization and relations from stages. Can be disabled.
		"""
		unpublishBase: Boolean = true
	): Asset
	"""
	Update many Asset documents
	"""
	updateManyAssetsConnection(
		"""
		Documents to apply update on
		"""
		where: AssetManyWhereInput
		"""
		Updates to document content
		"""
		data: AssetUpdateManyInput!
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
	): AssetConnection!
	"""
	Delete many Asset documents, return deleted documents
	"""
	deleteManyAssetsConnection(
		"""
		Documents to delete
		"""
		where: AssetManyWhereInput
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
	): AssetConnection!
	"""
	Publish many Asset documents
	"""
	publishManyAssetsConnection(
		"""
		Identifies documents in each stage to be published
		"""
		where: AssetManyWhereInput
		"""
		Stage to find matching documents in
		"""
		from: Stage = DRAFT
		"""
		Stages to publish documents to
		"""
		to: [Stage!]! = [PUBLISHED]
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
		"""
		Document localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is true
		"""
		withDefaultLocale: Boolean = true
	): AssetConnection!
	"""
	Find many Asset documents that match criteria in specified stage and unpublish from target stages
	"""
	unpublishManyAssetsConnection(
		"""
		Identifies documents in draft stage
		"""
		where: AssetManyWhereInput
		"""
		Stage to find matching documents in
		"""
		stage: Stage = DRAFT
		"""
		Stages to unpublish documents from
		"""
		from: [Stage!]! = [PUBLISHED]
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
		"""
		Locales to unpublish
		"""
		locales: [Locale!]
		"""
		Whether to unpublish the base document and default localization
		"""
		unpublishBase: Boolean = true
	): AssetConnection!
	"""
	Update many assets
	"""
	updateManyAssets(
		"""
		Documents to apply update on
		"""
		where: AssetManyWhereInput
		"""
		Updates to document content
		"""
		data: AssetUpdateManyInput!
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (updateManyAssetsConnection)"
		)
	"""
	Delete many Asset documents
	"""
	deleteManyAssets(
		"""
		Documents to delete
		"""
		where: AssetManyWhereInput
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (deleteManyAssetsConnection)"
		)
	"""
	Publish many Asset documents
	"""
	publishManyAssets(
		"""
		Identifies documents in each stage to be published
		"""
		where: AssetManyWhereInput
		"""
		Stages to publish documents to
		"""
		to: [Stage!]! = [PUBLISHED]
		"""
		Document localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is true
		"""
		withDefaultLocale: Boolean = true
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (publishManyAssetsConnection)"
		)
	"""
	Unpublish many Asset documents
	"""
	unpublishManyAssets(
		"""
		Identifies documents in each stage
		"""
		where: AssetManyWhereInput
		"""
		Stages to unpublish documents from
		"""
		from: [Stage!]! = [PUBLISHED]
		"""
		Locales to unpublish
		"""
		locales: [Locale!]
		"""
		Whether to unpublish the base document and default localization
		"""
		unpublishBase: Boolean = true
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (unpublishManyAssetsConnection)"
		)
	"""
	Schedule to publish one asset
	"""
	schedulePublishAsset(
		"""
		Document to publish
		"""
		where: AssetWhereUniqueInput!
		"""
		Optional localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is set
		"""
		withDefaultLocale: Boolean = true
		"""
		Publishing target stage
		"""
		to: [Stage!]! = [PUBLISHED]
		"""
		Release at point in time, will create new release containing this operation
		"""
		releaseAt: DateTime
		"""
		Optionally attach this scheduled operation to an existing release
		"""
		releaseId: String
	): Asset
	"""
	Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
	"""
	scheduleUnpublishAsset(
		"""
		Document to unpublish
		"""
		where: AssetWhereUniqueInput!
		"""
		Stages to unpublish document from
		"""
		from: [Stage!]! = [PUBLISHED]
		"""
		Release at point in time, will create new release containing this operation
		"""
		releaseAt: DateTime
		"""
		Optionally attach this scheduled operation to an existing release
		"""
		releaseId: String
		"""
		Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
		"""
		locales: [Locale!]
		"""
		Unpublish complete document including default localization and relations from stages. Can be disabled.
		"""
		unpublishBase: Boolean = true
	): Asset
	"""
	Delete and return scheduled operation
	"""
	deleteScheduledOperation(
		"""
		Document to delete
		"""
		where: ScheduledOperationWhereUniqueInput!
	): ScheduledOperation
	"""
	Create one scheduledRelease
	"""
	createScheduledRelease(data: ScheduledReleaseCreateInput!): ScheduledRelease
	"""
	Update one scheduledRelease
	"""
	updateScheduledRelease(
		where: ScheduledReleaseWhereUniqueInput!
		data: ScheduledReleaseUpdateInput!
	): ScheduledRelease
	"""
	Delete one scheduledRelease from _all_ existing stages. Returns deleted document.
	"""
	deleteScheduledRelease(
		"""
		Document to delete
		"""
		where: ScheduledReleaseWhereUniqueInput!
	): ScheduledRelease
	"""
	Create one idea
	"""
	createIdea(data: IdeaCreateInput!): Idea
	"""
	Update one idea
	"""
	updateIdea(where: IdeaWhereUniqueInput!, data: IdeaUpdateInput!): Idea
	"""
	Delete one idea from _all_ existing stages. Returns deleted document.
	"""
	deleteIdea(
		"""
		Document to delete
		"""
		where: IdeaWhereUniqueInput!
	): Idea
	"""
	Upsert one idea
	"""
	upsertIdea(where: IdeaWhereUniqueInput!, upsert: IdeaUpsertInput!): Idea
	"""
	Publish one idea
	"""
	publishIdea(
		"""
		Document to publish
		"""
		where: IdeaWhereUniqueInput!
		"""
		Optional localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is set
		"""
		withDefaultLocale: Boolean = true
		"""
		Publishing target stage
		"""
		to: [Stage!]! = [PUBLISHED]
	): Idea
	"""
	Unpublish one idea from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
	"""
	unpublishIdea(
		"""
		Document to unpublish
		"""
		where: IdeaWhereUniqueInput!
		"""
		Stages to unpublish document from
		"""
		from: [Stage!]! = [PUBLISHED]
		"""
		Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
		"""
		locales: [Locale!]
		"""
		Unpublish complete document including default localization and relations from stages. Can be disabled.
		"""
		unpublishBase: Boolean = true
	): Idea
	"""
	Update many Idea documents
	"""
	updateManyIdeasConnection(
		"""
		Documents to apply update on
		"""
		where: IdeaManyWhereInput
		"""
		Updates to document content
		"""
		data: IdeaUpdateManyInput!
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
	): IdeaConnection!
	"""
	Delete many Idea documents, return deleted documents
	"""
	deleteManyIdeasConnection(
		"""
		Documents to delete
		"""
		where: IdeaManyWhereInput
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
	): IdeaConnection!
	"""
	Publish many Idea documents
	"""
	publishManyIdeasConnection(
		"""
		Identifies documents in each stage to be published
		"""
		where: IdeaManyWhereInput
		"""
		Stage to find matching documents in
		"""
		from: Stage = DRAFT
		"""
		Stages to publish documents to
		"""
		to: [Stage!]! = [PUBLISHED]
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
		"""
		Document localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is true
		"""
		withDefaultLocale: Boolean = true
	): IdeaConnection!
	"""
	Find many Idea documents that match criteria in specified stage and unpublish from target stages
	"""
	unpublishManyIdeasConnection(
		"""
		Identifies documents in draft stage
		"""
		where: IdeaManyWhereInput
		"""
		Stage to find matching documents in
		"""
		stage: Stage = DRAFT
		"""
		Stages to unpublish documents from
		"""
		from: [Stage!]! = [PUBLISHED]
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
		"""
		Locales to unpublish
		"""
		locales: [Locale!]
		"""
		Whether to unpublish the base document and default localization
		"""
		unpublishBase: Boolean = true
	): IdeaConnection!
	"""
	Update many ideas
	"""
	updateManyIdeas(
		"""
		Documents to apply update on
		"""
		where: IdeaManyWhereInput
		"""
		Updates to document content
		"""
		data: IdeaUpdateManyInput!
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (updateManyIdeasConnection)"
		)
	"""
	Delete many Idea documents
	"""
	deleteManyIdeas(
		"""
		Documents to delete
		"""
		where: IdeaManyWhereInput
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (deleteManyIdeasConnection)"
		)
	"""
	Publish many Idea documents
	"""
	publishManyIdeas(
		"""
		Identifies documents in each stage to be published
		"""
		where: IdeaManyWhereInput
		"""
		Stages to publish documents to
		"""
		to: [Stage!]! = [PUBLISHED]
		"""
		Document localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is true
		"""
		withDefaultLocale: Boolean = true
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (publishManyIdeasConnection)"
		)
	"""
	Unpublish many Idea documents
	"""
	unpublishManyIdeas(
		"""
		Identifies documents in each stage
		"""
		where: IdeaManyWhereInput
		"""
		Stages to unpublish documents from
		"""
		from: [Stage!]! = [PUBLISHED]
		"""
		Locales to unpublish
		"""
		locales: [Locale!]
		"""
		Whether to unpublish the base document and default localization
		"""
		unpublishBase: Boolean = true
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (unpublishManyIdeasConnection)"
		)
	"""
	Schedule to publish one idea
	"""
	schedulePublishIdea(
		"""
		Document to publish
		"""
		where: IdeaWhereUniqueInput!
		"""
		Optional localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is set
		"""
		withDefaultLocale: Boolean = true
		"""
		Publishing target stage
		"""
		to: [Stage!]! = [PUBLISHED]
		"""
		Release at point in time, will create new release containing this operation
		"""
		releaseAt: DateTime
		"""
		Optionally attach this scheduled operation to an existing release
		"""
		releaseId: String
	): Idea
	"""
	Unpublish one idea from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
	"""
	scheduleUnpublishIdea(
		"""
		Document to unpublish
		"""
		where: IdeaWhereUniqueInput!
		"""
		Stages to unpublish document from
		"""
		from: [Stage!]! = [PUBLISHED]
		"""
		Release at point in time, will create new release containing this operation
		"""
		releaseAt: DateTime
		"""
		Optionally attach this scheduled operation to an existing release
		"""
		releaseId: String
		"""
		Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
		"""
		locales: [Locale!]
		"""
		Unpublish complete document including default localization and relations from stages. Can be disabled.
		"""
		unpublishBase: Boolean = true
	): Idea
	"""
	Create one thought
	"""
	createThought(data: ThoughtCreateInput!): Thought
	"""
	Update one thought
	"""
	updateThought(
		where: ThoughtWhereUniqueInput!
		data: ThoughtUpdateInput!
	): Thought
	"""
	Delete one thought from _all_ existing stages. Returns deleted document.
	"""
	deleteThought(
		"""
		Document to delete
		"""
		where: ThoughtWhereUniqueInput!
	): Thought
	"""
	Upsert one thought
	"""
	upsertThought(
		where: ThoughtWhereUniqueInput!
		upsert: ThoughtUpsertInput!
	): Thought
	"""
	Publish one thought
	"""
	publishThought(
		"""
		Document to publish
		"""
		where: ThoughtWhereUniqueInput!
		"""
		Optional localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is set
		"""
		withDefaultLocale: Boolean = true
		"""
		Publishing target stage
		"""
		to: [Stage!]! = [PUBLISHED]
	): Thought
	"""
	Unpublish one thought from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
	"""
	unpublishThought(
		"""
		Document to unpublish
		"""
		where: ThoughtWhereUniqueInput!
		"""
		Stages to unpublish document from
		"""
		from: [Stage!]! = [PUBLISHED]
		"""
		Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
		"""
		locales: [Locale!]
		"""
		Unpublish complete document including default localization and relations from stages. Can be disabled.
		"""
		unpublishBase: Boolean = true
	): Thought
	"""
	Update many Thought documents
	"""
	updateManyThoughtsConnection(
		"""
		Documents to apply update on
		"""
		where: ThoughtManyWhereInput
		"""
		Updates to document content
		"""
		data: ThoughtUpdateManyInput!
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
	): ThoughtConnection!
	"""
	Delete many Thought documents, return deleted documents
	"""
	deleteManyThoughtsConnection(
		"""
		Documents to delete
		"""
		where: ThoughtManyWhereInput
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
	): ThoughtConnection!
	"""
	Publish many Thought documents
	"""
	publishManyThoughtsConnection(
		"""
		Identifies documents in each stage to be published
		"""
		where: ThoughtManyWhereInput
		"""
		Stage to find matching documents in
		"""
		from: Stage = DRAFT
		"""
		Stages to publish documents to
		"""
		to: [Stage!]! = [PUBLISHED]
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
		"""
		Document localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is true
		"""
		withDefaultLocale: Boolean = true
	): ThoughtConnection!
	"""
	Find many Thought documents that match criteria in specified stage and unpublish from target stages
	"""
	unpublishManyThoughtsConnection(
		"""
		Identifies documents in draft stage
		"""
		where: ThoughtManyWhereInput
		"""
		Stage to find matching documents in
		"""
		stage: Stage = DRAFT
		"""
		Stages to unpublish documents from
		"""
		from: [Stage!]! = [PUBLISHED]
		skip: Int
		first: Int
		last: Int
		before: ID
		after: ID
		"""
		Locales to unpublish
		"""
		locales: [Locale!]
		"""
		Whether to unpublish the base document and default localization
		"""
		unpublishBase: Boolean = true
	): ThoughtConnection!
	"""
	Update many thoughts
	"""
	updateManyThoughts(
		"""
		Documents to apply update on
		"""
		where: ThoughtManyWhereInput
		"""
		Updates to document content
		"""
		data: ThoughtUpdateManyInput!
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (updateManyThoughtsConnection)"
		)
	"""
	Delete many Thought documents
	"""
	deleteManyThoughts(
		"""
		Documents to delete
		"""
		where: ThoughtManyWhereInput
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (deleteManyThoughtsConnection)"
		)
	"""
	Publish many Thought documents
	"""
	publishManyThoughts(
		"""
		Identifies documents in each stage to be published
		"""
		where: ThoughtManyWhereInput
		"""
		Stages to publish documents to
		"""
		to: [Stage!]! = [PUBLISHED]
		"""
		Document localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is true
		"""
		withDefaultLocale: Boolean = true
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (publishManyThoughtsConnection)"
		)
	"""
	Unpublish many Thought documents
	"""
	unpublishManyThoughts(
		"""
		Identifies documents in each stage
		"""
		where: ThoughtManyWhereInput
		"""
		Stages to unpublish documents from
		"""
		from: [Stage!]! = [PUBLISHED]
		"""
		Locales to unpublish
		"""
		locales: [Locale!]
		"""
		Whether to unpublish the base document and default localization
		"""
		unpublishBase: Boolean = true
	): BatchPayload!
		@deprecated(
			reason: "Please use the new paginated many mutation (unpublishManyThoughtsConnection)"
		)
	"""
	Schedule to publish one thought
	"""
	schedulePublishThought(
		"""
		Document to publish
		"""
		where: ThoughtWhereUniqueInput!
		"""
		Optional localizations to publish
		"""
		locales: [Locale!]
		"""
		Whether to publish the base document
		"""
		publishBase: Boolean = true
		"""
		Whether to include the default locale when publishBase is set
		"""
		withDefaultLocale: Boolean = true
		"""
		Publishing target stage
		"""
		to: [Stage!]! = [PUBLISHED]
		"""
		Release at point in time, will create new release containing this operation
		"""
		releaseAt: DateTime
		"""
		Optionally attach this scheduled operation to an existing release
		"""
		releaseId: String
	): Thought
	"""
	Unpublish one thought from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only.
	"""
	scheduleUnpublishThought(
		"""
		Document to unpublish
		"""
		where: ThoughtWhereUniqueInput!
		"""
		Stages to unpublish document from
		"""
		from: [Stage!]! = [PUBLISHED]
		"""
		Release at point in time, will create new release containing this operation
		"""
		releaseAt: DateTime
		"""
		Optionally attach this scheduled operation to an existing release
		"""
		releaseId: String
		"""
		Optional locales to unpublish. Unpublishing the default locale will completely remove the document from the selected stages
		"""
		locales: [Locale!]
		"""
		Unpublish complete document including default localization and relations from stages. Can be disabled.
		"""
		unpublishBase: Boolean = true
	): Thought
	createPoll(poll: PollInput!): ID!
	updatePoll(key: String!, poll: PollInput!): ID!
	voteOnPoll(key: String!, vote: PollVoteInput!): ID!
}

"""
An object with an ID
"""
interface Node {
	"""
	The id of the object.
	"""
	id: ID!
	"""
	The Stage of an object
	"""
	stage: Stage!
}

enum PAGE {
	HOME
	NOT_FOUND
	ABOUT
	CHANGELOG
	IDEAS
	POSTERS
	COFFEE
	LONGBOARD
	TRAVEL
	MUSIC
	THREE_PLAYGROUND
	CASE_STUDIES
	BLOG
	SHOP
}

"""
Information about pagination in a connection.
"""
type PageInfo {
	"""
	When paginating forwards, are there more items?
	"""
	hasNextPage: Boolean!
	"""
	When paginating backwards, are there more items?
	"""
	hasPreviousPage: Boolean!
	"""
	When paginating backwards, the cursor to continue.
	"""
	startCursor: String
	"""
	When paginating forwards, the cursor to continue.
	"""
	endCursor: String
	"""
	Number of items in the current page.
	"""
	pageSize: Int
}

type Poll {
	key: String!
	question: LocalizedString!
	options: [PollOption!]!
	isFreeText: Boolean!
	votes: [PollVote!]!
	totalVotes: Int!
}

input PollInput {
	key: String!
	question: LocalizedStringInput!
	options: [PollOptionInput!]!
	isFreeText: Boolean
}

type PollOption {
	value: String!
	label: LocalizedString!
	votes: Int!
}

input PollOptionInput {
	value: String!
	label: LocalizedStringInput!
}

type PollVote {
	value: String!
	votedAt: String!
}

input PollVoteInput {
	value: String!
	votedAt: String!
}

input PublishLocaleInput {
	"""
	Locales to publish
	"""
	locale: Locale!
	"""
	Stages to publish selected locales to
	"""
	stages: [Stage!]!
}

type Query {
	"""
	Fetches an object given its ID
	"""
	node(
		"""
		The ID of an object
		"""
		id: ID!
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `Node` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): Node
	"""
	Retrieve multiple users
	"""
	users(
		where: UserWhereInput
		orderBy: UserOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): [User!]!
	"""
	Retrieve a single user
	"""
	user(
		where: UserWhereUniqueInput!
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): User
	"""
	Retrieve multiple users using the Relay connection interface
	"""
	usersConnection(
		where: UserWhereInput
		orderBy: UserOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `User` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): UserConnection!
	"""
	Retrieve multiple assets
	"""
	assets(
		where: AssetWhereInput
		orderBy: AssetOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
		The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): [Asset!]!
	"""
	Retrieve a single asset
	"""
	asset(
		where: AssetWhereUniqueInput!
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
		The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): Asset
	"""
	Retrieve multiple assets using the Relay connection interface
	"""
	assetsConnection(
		where: AssetWhereInput
		orderBy: AssetOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `Asset` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
		The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): AssetConnection!
	"""
	Retrieve document version
	"""
	assetVersion(where: VersionWhereInput!): DocumentVersion
	"""
	Retrieve multiple scheduledOperations
	"""
	scheduledOperations(
		where: ScheduledOperationWhereInput
		orderBy: ScheduledOperationOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): [ScheduledOperation!]!
	"""
	Retrieve a single scheduledOperation
	"""
	scheduledOperation(
		where: ScheduledOperationWhereUniqueInput!
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): ScheduledOperation
	"""
	Retrieve multiple scheduledOperations using the Relay connection interface
	"""
	scheduledOperationsConnection(
		where: ScheduledOperationWhereInput
		orderBy: ScheduledOperationOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `ScheduledOperation` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): ScheduledOperationConnection!
	"""
	Retrieve multiple scheduledReleases
	"""
	scheduledReleases(
		where: ScheduledReleaseWhereInput
		orderBy: ScheduledReleaseOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): [ScheduledRelease!]!
	"""
	Retrieve a single scheduledRelease
	"""
	scheduledRelease(
		where: ScheduledReleaseWhereUniqueInput!
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): ScheduledRelease
	"""
	Retrieve multiple scheduledReleases using the Relay connection interface
	"""
	scheduledReleasesConnection(
		where: ScheduledReleaseWhereInput
		orderBy: ScheduledReleaseOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `ScheduledRelease` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): ScheduledReleaseConnection!
	"""
	Retrieve multiple ideas
	"""
	ideas(
		where: IdeaWhereInput
		orderBy: IdeaOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `Idea` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
		The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): [Idea!]!
	"""
	Retrieve a single idea
	"""
	idea(
		where: IdeaWhereUniqueInput!
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `Idea` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
		The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): Idea
	"""
	Retrieve multiple ideas using the Relay connection interface
	"""
	ideasConnection(
		where: IdeaWhereInput
		orderBy: IdeaOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `Idea` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
		The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): IdeaConnection!
	"""
	Retrieve document version
	"""
	ideaVersion(where: VersionWhereInput!): DocumentVersion
	"""
	Retrieve multiple thoughts
	"""
	thoughts(
		where: ThoughtWhereInput
		orderBy: ThoughtOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `Thought` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
		The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): [Thought!]!
	"""
	Retrieve a single thought
	"""
	thought(
		where: ThoughtWhereUniqueInput!
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `Thought` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
		The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): Thought
	"""
	Retrieve multiple thoughts using the Relay connection interface
	"""
	thoughtsConnection(
		where: ThoughtWhereInput
		orderBy: ThoughtOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		stage: Stage! = PUBLISHED
		"""
		Defines which locales should be returned.

		Note that `Thought` will be affected directly by this argument, as well as any other related models with localized fields in the query's subtree.
		The first locale matching the provided list will be returned, entries with non matching locales will be filtered out.

		This argument may be overwritten by another locales definition in a relational child field, this will effectively use the overwritten argument for the affected query's subtree.
		"""
		locales: [Locale!]! = [en]
	): ThoughtConnection!
	"""
	Retrieve document version
	"""
	thoughtVersion(where: VersionWhereInput!): DocumentVersion
	allPolls: [Poll!]
	poll(key: String!): Poll
}

"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
	r: RGBAHue!
	g: RGBAHue!
	b: RGBAHue!
	a: RGBATransparency!
}

scalar RGBAHue

"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input RGBAInput {
	r: RGBAHue!
	g: RGBAHue!
	b: RGBAHue!
	a: RGBATransparency!
}

scalar RGBATransparency

"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type RichText {
	"""
	Returns AST representation
	"""
	raw: RichTextAST!
	"""
	Returns HTMl representation
	"""
	html: String!
	"""
	Returns Markdown representation
	"""
	markdown: String!
	"""
	Returns plain-text contents of RichText
	"""
	text: String!
}

"""
Slate-compatible RichText AST
"""
scalar RichTextAST

"""
Scheduled Operation system model
"""
type ScheduledOperation implements Node {
	"""
	System stage field
	"""
	stage: Stage!
	"""
	Get the document in other stages
	"""
	documentInStages(
		"""
		Potential stages that should be returned
		"""
		stages: [Stage!]! = [DRAFT, PUBLISHED]
		"""
		Decides if the current stage should be included or not
		"""
		includeCurrent: Boolean! = false
		"""
		Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
		"""
		inheritLocale: Boolean! = false
	): [ScheduledOperation!]!
	"""
	Raw operation payload including all details, this field is subject to change
	"""
	rawPayload: Json!
	"""
	Operation error message
	"""
	errorMessage: String
	"""
	Operation description
	"""
	description: String
	"""
	The time the document was published. Null on documents in draft stage.
	"""
	publishedAt: DateTime
	"""
	The time the document was updated
	"""
	updatedAt: DateTime!
	"""
	The time the document was created
	"""
	createdAt: DateTime!
	"""
	The unique identifier
	"""
	id: ID!
	"""
	The release this operation is scheduled for
	"""
	release(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `release` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): ScheduledRelease
	"""
	User that last published this document
	"""
	publishedBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	User that last updated this document
	"""
	updatedBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	User that created this document
	"""
	createdBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	operation Status
	"""
	status: ScheduledOperationStatus!
	affectedDocuments(
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `affectedDocuments` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): [ScheduledOperationAffectedDocument!]!
}

union ScheduledOperationAffectedDocument = Asset | Idea | Thought

input ScheduledOperationConnectInput {
	"""
	Document to connect
	"""
	where: ScheduledOperationWhereUniqueInput!
	"""
	Allow to specify document position in list of connected documents, will default to appending at end of list
	"""
	position: ConnectPositionInput
}

"""
A connection to a list of items.
"""
type ScheduledOperationConnection {
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	A list of edges.
	"""
	edges: [ScheduledOperationEdge!]!
	aggregate: Aggregate!
}

input ScheduledOperationCreateManyInlineInput {
	"""
	Connect multiple existing ScheduledOperation documents
	"""
	connect: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationCreateOneInlineInput {
	"""
	Connect one existing ScheduledOperation document
	"""
	connect: ScheduledOperationWhereUniqueInput
}

"""
An edge in a connection.
"""
type ScheduledOperationEdge {
	"""
	The item at the end of the edge.
	"""
	node: ScheduledOperation!
	"""
	A cursor for use in pagination.
	"""
	cursor: String!
}

"""
Identifies documents
"""
input ScheduledOperationManyWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [ScheduledOperationWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [ScheduledOperationWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [ScheduledOperationWhereInput!]
	errorMessage: String
	"""
	All values that are not equal to given value.
	"""
	errorMessage_not: String
	"""
	All values that are contained in given list.
	"""
	errorMessage_in: [String]
	"""
	All values that are not contained in given list.
	"""
	errorMessage_not_in: [String]
	"""
	All values containing the given string.
	"""
	errorMessage_contains: String
	"""
	All values not containing the given string.
	"""
	errorMessage_not_contains: String
	"""
	All values starting with the given string.
	"""
	errorMessage_starts_with: String
	"""
	All values not starting with the given string.
	"""
	errorMessage_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	errorMessage_ends_with: String
	"""
	All values not ending with the given string
	"""
	errorMessage_not_ends_with: String
	description: String
	"""
	All values that are not equal to given value.
	"""
	description_not: String
	"""
	All values that are contained in given list.
	"""
	description_in: [String]
	"""
	All values that are not contained in given list.
	"""
	description_not_in: [String]
	"""
	All values containing the given string.
	"""
	description_contains: String
	"""
	All values not containing the given string.
	"""
	description_not_contains: String
	"""
	All values starting with the given string.
	"""
	description_starts_with: String
	"""
	All values not starting with the given string.
	"""
	description_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	description_ends_with: String
	"""
	All values not ending with the given string
	"""
	description_not_ends_with: String
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	release: ScheduledReleaseWhereInput
	publishedBy: UserWhereInput
	updatedBy: UserWhereInput
	createdBy: UserWhereInput
	status: ScheduledOperationStatus
	"""
	All values that are not equal to given value.
	"""
	status_not: ScheduledOperationStatus
	"""
	All values that are contained in given list.
	"""
	status_in: [ScheduledOperationStatus]
	"""
	All values that are not contained in given list.
	"""
	status_not_in: [ScheduledOperationStatus]
}

enum ScheduledOperationOrderByInput {
	errorMessage_ASC
	errorMessage_DESC
	description_ASC
	description_DESC
	publishedAt_ASC
	publishedAt_DESC
	updatedAt_ASC
	updatedAt_DESC
	createdAt_ASC
	createdAt_DESC
	id_ASC
	id_DESC
	status_ASC
	status_DESC
}

"""
System Scheduled Operation Status
"""
enum ScheduledOperationStatus {
	PENDING
	IN_PROGRESS
	COMPLETED
	FAILED
	CANCELED
}

input ScheduledOperationUpdateManyInlineInput {
	"""
	Connect multiple existing ScheduledOperation documents
	"""
	connect: [ScheduledOperationConnectInput!]
	"""
	Override currently-connected documents with multiple existing ScheduledOperation documents
	"""
	set: [ScheduledOperationWhereUniqueInput!]
	"""
	Disconnect multiple ScheduledOperation documents
	"""
	disconnect: [ScheduledOperationWhereUniqueInput!]
}

input ScheduledOperationUpdateOneInlineInput {
	"""
	Connect existing ScheduledOperation document
	"""
	connect: ScheduledOperationWhereUniqueInput
	"""
	Disconnect currently connected ScheduledOperation document
	"""
	disconnect: Boolean
}

"""
Identifies documents
"""
input ScheduledOperationWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [ScheduledOperationWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [ScheduledOperationWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [ScheduledOperationWhereInput!]
	errorMessage: String
	"""
	All values that are not equal to given value.
	"""
	errorMessage_not: String
	"""
	All values that are contained in given list.
	"""
	errorMessage_in: [String]
	"""
	All values that are not contained in given list.
	"""
	errorMessage_not_in: [String]
	"""
	All values containing the given string.
	"""
	errorMessage_contains: String
	"""
	All values not containing the given string.
	"""
	errorMessage_not_contains: String
	"""
	All values starting with the given string.
	"""
	errorMessage_starts_with: String
	"""
	All values not starting with the given string.
	"""
	errorMessage_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	errorMessage_ends_with: String
	"""
	All values not ending with the given string
	"""
	errorMessage_not_ends_with: String
	description: String
	"""
	All values that are not equal to given value.
	"""
	description_not: String
	"""
	All values that are contained in given list.
	"""
	description_in: [String]
	"""
	All values that are not contained in given list.
	"""
	description_not_in: [String]
	"""
	All values containing the given string.
	"""
	description_contains: String
	"""
	All values not containing the given string.
	"""
	description_not_contains: String
	"""
	All values starting with the given string.
	"""
	description_starts_with: String
	"""
	All values not starting with the given string.
	"""
	description_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	description_ends_with: String
	"""
	All values not ending with the given string
	"""
	description_not_ends_with: String
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	release: ScheduledReleaseWhereInput
	publishedBy: UserWhereInput
	updatedBy: UserWhereInput
	createdBy: UserWhereInput
	status: ScheduledOperationStatus
	"""
	All values that are not equal to given value.
	"""
	status_not: ScheduledOperationStatus
	"""
	All values that are contained in given list.
	"""
	status_in: [ScheduledOperationStatus]
	"""
	All values that are not contained in given list.
	"""
	status_not_in: [ScheduledOperationStatus]
}

"""
References ScheduledOperation record uniquely
"""
input ScheduledOperationWhereUniqueInput {
	id: ID
}

"""
Scheduled Release system model
"""
type ScheduledRelease implements Node {
	"""
	System stage field
	"""
	stage: Stage!
	"""
	Get the document in other stages
	"""
	documentInStages(
		"""
		Potential stages that should be returned
		"""
		stages: [Stage!]! = [DRAFT, PUBLISHED]
		"""
		Decides if the current stage should be included or not
		"""
		includeCurrent: Boolean! = false
		"""
		Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
		"""
		inheritLocale: Boolean! = false
	): [ScheduledRelease!]!
	"""
	Release date and time
	"""
	releaseAt: DateTime
	"""
	Whether scheduled release is implicit
	"""
	isImplicit: Boolean!
	"""
	Whether scheduled release should be run
	"""
	isActive: Boolean!
	"""
	Release error message
	"""
	errorMessage: String
	"""
	Release description
	"""
	description: String
	"""
	Release Title
	"""
	title: String
	"""
	The time the document was published. Null on documents in draft stage.
	"""
	publishedAt: DateTime
	"""
	The time the document was updated
	"""
	updatedAt: DateTime!
	"""
	The time the document was created
	"""
	createdAt: DateTime!
	"""
	The unique identifier
	"""
	id: ID!
	"""
	Operations to run with this release
	"""
	operations(
		where: ScheduledOperationWhereInput
		orderBy: ScheduledOperationOrderByInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `operations` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): [ScheduledOperation!]!
	"""
	User that last published this document
	"""
	publishedBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	User that last updated this document
	"""
	updatedBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	User that created this document
	"""
	createdBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	Release Status
	"""
	status: ScheduledReleaseStatus!
}

input ScheduledReleaseConnectInput {
	"""
	Document to connect
	"""
	where: ScheduledReleaseWhereUniqueInput!
	"""
	Allow to specify document position in list of connected documents, will default to appending at end of list
	"""
	position: ConnectPositionInput
}

"""
A connection to a list of items.
"""
type ScheduledReleaseConnection {
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	A list of edges.
	"""
	edges: [ScheduledReleaseEdge!]!
	aggregate: Aggregate!
}

input ScheduledReleaseCreateInput {
	releaseAt: DateTime
	isActive: Boolean = true
	errorMessage: String
	description: String
	title: String
	updatedAt: DateTime
	createdAt: DateTime
}

input ScheduledReleaseCreateManyInlineInput {
	"""
	Create and connect multiple existing ScheduledRelease documents
	"""
	create: [ScheduledReleaseCreateInput!]
	"""
	Connect multiple existing ScheduledRelease documents
	"""
	connect: [ScheduledReleaseWhereUniqueInput!]
}

input ScheduledReleaseCreateOneInlineInput {
	"""
	Create and connect one ScheduledRelease document
	"""
	create: ScheduledReleaseCreateInput
	"""
	Connect one existing ScheduledRelease document
	"""
	connect: ScheduledReleaseWhereUniqueInput
}

"""
An edge in a connection.
"""
type ScheduledReleaseEdge {
	"""
	The item at the end of the edge.
	"""
	node: ScheduledRelease!
	"""
	A cursor for use in pagination.
	"""
	cursor: String!
}

"""
Identifies documents
"""
input ScheduledReleaseManyWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [ScheduledReleaseWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [ScheduledReleaseWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [ScheduledReleaseWhereInput!]
	releaseAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	releaseAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	releaseAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	releaseAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	releaseAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	releaseAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	releaseAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	releaseAt_gte: DateTime
	isImplicit: Boolean
	"""
	All values that are not equal to given value.
	"""
	isImplicit_not: Boolean
	isActive: Boolean
	"""
	All values that are not equal to given value.
	"""
	isActive_not: Boolean
	errorMessage: String
	"""
	All values that are not equal to given value.
	"""
	errorMessage_not: String
	"""
	All values that are contained in given list.
	"""
	errorMessage_in: [String]
	"""
	All values that are not contained in given list.
	"""
	errorMessage_not_in: [String]
	"""
	All values containing the given string.
	"""
	errorMessage_contains: String
	"""
	All values not containing the given string.
	"""
	errorMessage_not_contains: String
	"""
	All values starting with the given string.
	"""
	errorMessage_starts_with: String
	"""
	All values not starting with the given string.
	"""
	errorMessage_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	errorMessage_ends_with: String
	"""
	All values not ending with the given string
	"""
	errorMessage_not_ends_with: String
	description: String
	"""
	All values that are not equal to given value.
	"""
	description_not: String
	"""
	All values that are contained in given list.
	"""
	description_in: [String]
	"""
	All values that are not contained in given list.
	"""
	description_not_in: [String]
	"""
	All values containing the given string.
	"""
	description_contains: String
	"""
	All values not containing the given string.
	"""
	description_not_contains: String
	"""
	All values starting with the given string.
	"""
	description_starts_with: String
	"""
	All values not starting with the given string.
	"""
	description_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	description_ends_with: String
	"""
	All values not ending with the given string
	"""
	description_not_ends_with: String
	title: String
	"""
	All values that are not equal to given value.
	"""
	title_not: String
	"""
	All values that are contained in given list.
	"""
	title_in: [String]
	"""
	All values that are not contained in given list.
	"""
	title_not_in: [String]
	"""
	All values containing the given string.
	"""
	title_contains: String
	"""
	All values not containing the given string.
	"""
	title_not_contains: String
	"""
	All values starting with the given string.
	"""
	title_starts_with: String
	"""
	All values not starting with the given string.
	"""
	title_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	title_ends_with: String
	"""
	All values not ending with the given string
	"""
	title_not_ends_with: String
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	operations_every: ScheduledOperationWhereInput
	operations_some: ScheduledOperationWhereInput
	operations_none: ScheduledOperationWhereInput
	publishedBy: UserWhereInput
	updatedBy: UserWhereInput
	createdBy: UserWhereInput
	status: ScheduledReleaseStatus
	"""
	All values that are not equal to given value.
	"""
	status_not: ScheduledReleaseStatus
	"""
	All values that are contained in given list.
	"""
	status_in: [ScheduledReleaseStatus]
	"""
	All values that are not contained in given list.
	"""
	status_not_in: [ScheduledReleaseStatus]
}

enum ScheduledReleaseOrderByInput {
	releaseAt_ASC
	releaseAt_DESC
	isImplicit_ASC
	isImplicit_DESC
	isActive_ASC
	isActive_DESC
	errorMessage_ASC
	errorMessage_DESC
	description_ASC
	description_DESC
	title_ASC
	title_DESC
	publishedAt_ASC
	publishedAt_DESC
	updatedAt_ASC
	updatedAt_DESC
	createdAt_ASC
	createdAt_DESC
	id_ASC
	id_DESC
	status_ASC
	status_DESC
}

"""
System Scheduled Release Status
"""
enum ScheduledReleaseStatus {
	PENDING
	IN_PROGRESS
	COMPLETED
	FAILED
}

input ScheduledReleaseUpdateInput {
	releaseAt: DateTime
	isActive: Boolean
	errorMessage: String
	description: String
	title: String
}

input ScheduledReleaseUpdateManyInlineInput {
	"""
	Create and connect multiple ScheduledRelease documents
	"""
	create: [ScheduledReleaseCreateInput!]
	"""
	Connect multiple existing ScheduledRelease documents
	"""
	connect: [ScheduledReleaseConnectInput!]
	"""
	Override currently-connected documents with multiple existing ScheduledRelease documents
	"""
	set: [ScheduledReleaseWhereUniqueInput!]
	"""
	Update multiple ScheduledRelease documents
	"""
	update: [ScheduledReleaseUpdateWithNestedWhereUniqueInput!]
	"""
	Upsert multiple ScheduledRelease documents
	"""
	upsert: [ScheduledReleaseUpsertWithNestedWhereUniqueInput!]
	"""
	Disconnect multiple ScheduledRelease documents
	"""
	disconnect: [ScheduledReleaseWhereUniqueInput!]
	"""
	Delete multiple ScheduledRelease documents
	"""
	delete: [ScheduledReleaseWhereUniqueInput!]
}

input ScheduledReleaseUpdateManyInput {
	releaseAt: DateTime
	isActive: Boolean
	errorMessage: String
	description: String
	title: String
}

input ScheduledReleaseUpdateManyWithNestedWhereInput {
	"""
	Document search
	"""
	where: ScheduledReleaseWhereInput!
	"""
	Update many input
	"""
	data: ScheduledReleaseUpdateManyInput!
}

input ScheduledReleaseUpdateOneInlineInput {
	"""
	Create and connect one ScheduledRelease document
	"""
	create: ScheduledReleaseCreateInput
	"""
	Update single ScheduledRelease document
	"""
	update: ScheduledReleaseUpdateWithNestedWhereUniqueInput
	"""
	Upsert single ScheduledRelease document
	"""
	upsert: ScheduledReleaseUpsertWithNestedWhereUniqueInput
	"""
	Connect existing ScheduledRelease document
	"""
	connect: ScheduledReleaseWhereUniqueInput
	"""
	Disconnect currently connected ScheduledRelease document
	"""
	disconnect: Boolean
	"""
	Delete currently connected ScheduledRelease document
	"""
	delete: Boolean
}

input ScheduledReleaseUpdateWithNestedWhereUniqueInput {
	"""
	Unique document search
	"""
	where: ScheduledReleaseWhereUniqueInput!
	"""
	Document to update
	"""
	data: ScheduledReleaseUpdateInput!
}

input ScheduledReleaseUpsertInput {
	"""
	Create document if it didn't exist
	"""
	create: ScheduledReleaseCreateInput!
	"""
	Update document if it exists
	"""
	update: ScheduledReleaseUpdateInput!
}

input ScheduledReleaseUpsertWithNestedWhereUniqueInput {
	"""
	Unique document search
	"""
	where: ScheduledReleaseWhereUniqueInput!
	"""
	Upsert data
	"""
	data: ScheduledReleaseUpsertInput!
}

"""
Identifies documents
"""
input ScheduledReleaseWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [ScheduledReleaseWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [ScheduledReleaseWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [ScheduledReleaseWhereInput!]
	releaseAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	releaseAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	releaseAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	releaseAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	releaseAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	releaseAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	releaseAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	releaseAt_gte: DateTime
	isImplicit: Boolean
	"""
	All values that are not equal to given value.
	"""
	isImplicit_not: Boolean
	isActive: Boolean
	"""
	All values that are not equal to given value.
	"""
	isActive_not: Boolean
	errorMessage: String
	"""
	All values that are not equal to given value.
	"""
	errorMessage_not: String
	"""
	All values that are contained in given list.
	"""
	errorMessage_in: [String]
	"""
	All values that are not contained in given list.
	"""
	errorMessage_not_in: [String]
	"""
	All values containing the given string.
	"""
	errorMessage_contains: String
	"""
	All values not containing the given string.
	"""
	errorMessage_not_contains: String
	"""
	All values starting with the given string.
	"""
	errorMessage_starts_with: String
	"""
	All values not starting with the given string.
	"""
	errorMessage_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	errorMessage_ends_with: String
	"""
	All values not ending with the given string
	"""
	errorMessage_not_ends_with: String
	description: String
	"""
	All values that are not equal to given value.
	"""
	description_not: String
	"""
	All values that are contained in given list.
	"""
	description_in: [String]
	"""
	All values that are not contained in given list.
	"""
	description_not_in: [String]
	"""
	All values containing the given string.
	"""
	description_contains: String
	"""
	All values not containing the given string.
	"""
	description_not_contains: String
	"""
	All values starting with the given string.
	"""
	description_starts_with: String
	"""
	All values not starting with the given string.
	"""
	description_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	description_ends_with: String
	"""
	All values not ending with the given string
	"""
	description_not_ends_with: String
	title: String
	"""
	All values that are not equal to given value.
	"""
	title_not: String
	"""
	All values that are contained in given list.
	"""
	title_in: [String]
	"""
	All values that are not contained in given list.
	"""
	title_not_in: [String]
	"""
	All values containing the given string.
	"""
	title_contains: String
	"""
	All values not containing the given string.
	"""
	title_not_contains: String
	"""
	All values starting with the given string.
	"""
	title_starts_with: String
	"""
	All values not starting with the given string.
	"""
	title_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	title_ends_with: String
	"""
	All values not ending with the given string
	"""
	title_not_ends_with: String
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	operations_every: ScheduledOperationWhereInput
	operations_some: ScheduledOperationWhereInput
	operations_none: ScheduledOperationWhereInput
	publishedBy: UserWhereInput
	updatedBy: UserWhereInput
	createdBy: UserWhereInput
	status: ScheduledReleaseStatus
	"""
	All values that are not equal to given value.
	"""
	status_not: ScheduledReleaseStatus
	"""
	All values that are contained in given list.
	"""
	status_in: [ScheduledReleaseStatus]
	"""
	All values that are not contained in given list.
	"""
	status_not_in: [ScheduledReleaseStatus]
}

"""
References ScheduledRelease record uniquely
"""
input ScheduledReleaseWhereUniqueInput {
	id: ID
}

"""
Stage system enumeration
"""
enum Stage {
	"""
	The Draft is the default stage for all your content.
	"""
	DRAFT
	"""
	The Published stage is where you can publish your content to.
	"""
	PUBLISHED
}

enum SystemDateTimeFieldVariation {
	BASE
	LOCALIZATION
	COMBINED
}

type Thought implements Node {
	"""
	System stage field
	"""
	stage: Stage!
	"""
	System Locale field
	"""
	locale: Locale!
	"""
	Get the other localizations for this document
	"""
	localizations(
		"""
		Potential locales that should be returned
		"""
		locales: [Locale!]! = [en]
		"""
		Decides if the current locale should be included or not
		"""
		includeCurrent: Boolean! = false
	): [Thought!]!
	"""
	Get the document in other stages
	"""
	documentInStages(
		"""
		Potential stages that should be returned
		"""
		stages: [Stage!]! = [DRAFT, PUBLISHED]
		"""
		Decides if the current stage should be included or not
		"""
		includeCurrent: Boolean! = false
		"""
		Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
		"""
		inheritLocale: Boolean! = false
	): [Thought!]!
	"""
	The time the document was published. Null on documents in draft stage.
	"""
	publishedAt(
		"""
		Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
		"""
		variation: SystemDateTimeFieldVariation! = COMBINED
	): DateTime
	"""
	The time the document was updated
	"""
	updatedAt(
		"""
		Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
		"""
		variation: SystemDateTimeFieldVariation! = COMBINED
	): DateTime!
	"""
	The time the document was created
	"""
	createdAt(
		"""
		Variation of DateTime field to return, allows value from base document, current localization, or combined by returning the newer value of both
		"""
		variation: SystemDateTimeFieldVariation! = COMBINED
	): DateTime!
	"""
	The unique identifier
	"""
	id: ID!
	title: String!
	slug: String!
	introduction: String
	body: ThoughtBodyRichText!
	location: Location
	"""
	User that last published this document
	"""
	publishedBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `publishedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	User that last updated this document
	"""
	updatedBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `updatedBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	"""
	User that created this document
	"""
	createdBy(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `createdBy` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): User
	cover(
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `cover` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): Asset
	scheduledIn(
		where: ScheduledOperationWhereInput
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
		"""
		Allows to optionally override locale filtering behaviour in the query's subtree.

		Note that `scheduledIn` is a model without localized fields and will not be affected directly by this argument, however the locales will be passed on to any relational fields in the query's subtree for filtering.
		For related models with localized fields in the query's subtree, the first locale matching the provided list of locales will be returned, entries with non matching locales will be filtered out.

		This argument will overwrite any existing locale filtering defined in the query's tree for the subtree.
		"""
		locales: [Locale!]
	): [ScheduledOperation!]!
	"""
	List of Thought versions
	"""
	history(
		limit: Int! = 10
		skip: Int! = 0
		"""
		This is optional and can be used to fetch the document version history for a specific stage instead of the current one
		"""
		stageOverride: Stage
	): [Version!]!
}

type ThoughtBodyRichText {
	raw: RichTextAST! @deprecated(reason: "Please use the 'json' field")
	json: RichTextAST!
	"""
	Returns HTMl representation
	"""
	html: String!
	"""
	Returns Markdown representation
	"""
	markdown: String!
	"""
	Returns plain-text contents of RichText
	"""
	text: String!
	references(
		skip: Int
		after: String
		before: String
		first: Int
		last: Int
	): [ThoughtBodyRichTextEmbeddedTypes!]!
}

union ThoughtBodyRichTextEmbeddedTypes = Asset | Idea | Thought

input ThoughtConnectInput {
	"""
	Document to connect
	"""
	where: ThoughtWhereUniqueInput!
	"""
	Allow to specify document position in list of connected documents, will default to appending at end of list
	"""
	position: ConnectPositionInput
}

"""
A connection to a list of items.
"""
type ThoughtConnection {
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	A list of edges.
	"""
	edges: [ThoughtEdge!]!
	aggregate: Aggregate!
}

input ThoughtCreateInput {
	updatedAt: DateTime
	createdAt: DateTime
	"""
	title input for default locale (en)
	"""
	title: String!
	slug: String!
	"""
	introduction input for default locale (en)
	"""
	introduction: String
	"""
	body input for default locale (en)
	"""
	body: RichTextAST!
	location: LocationInput
	cover: AssetCreateOneInlineInput
	"""
	Inline mutations for managing document localizations excluding the default locale
	"""
	localizations: ThoughtCreateLocalizationsInput
}

input ThoughtCreateLocalizationDataInput {
	updatedAt: DateTime
	createdAt: DateTime
	title: String!
	introduction: String
	body: RichTextAST!
}

input ThoughtCreateLocalizationInput {
	"""
	Localization input
	"""
	data: ThoughtCreateLocalizationDataInput!
	locale: Locale!
}

input ThoughtCreateLocalizationsInput {
	"""
	Create localizations for the newly-created document
	"""
	create: [ThoughtCreateLocalizationInput!]
}

input ThoughtCreateManyInlineInput {
	"""
	Create and connect multiple existing Thought documents
	"""
	create: [ThoughtCreateInput!]
	"""
	Connect multiple existing Thought documents
	"""
	connect: [ThoughtWhereUniqueInput!]
}

input ThoughtCreateOneInlineInput {
	"""
	Create and connect one Thought document
	"""
	create: ThoughtCreateInput
	"""
	Connect one existing Thought document
	"""
	connect: ThoughtWhereUniqueInput
}

"""
An edge in a connection.
"""
type ThoughtEdge {
	"""
	The item at the end of the edge.
	"""
	node: Thought!
	"""
	A cursor for use in pagination.
	"""
	cursor: String!
}

"""
Identifies documents
"""
input ThoughtManyWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [ThoughtWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [ThoughtWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [ThoughtWhereInput!]
	documentInStages_every: ThoughtWhereStageInput
	documentInStages_some: ThoughtWhereStageInput
	documentInStages_none: ThoughtWhereStageInput
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	slug: String
	"""
	All values that are not equal to given value.
	"""
	slug_not: String
	"""
	All values that are contained in given list.
	"""
	slug_in: [String]
	"""
	All values that are not contained in given list.
	"""
	slug_not_in: [String]
	"""
	All values containing the given string.
	"""
	slug_contains: String
	"""
	All values not containing the given string.
	"""
	slug_not_contains: String
	"""
	All values starting with the given string.
	"""
	slug_starts_with: String
	"""
	All values not starting with the given string.
	"""
	slug_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	slug_ends_with: String
	"""
	All values not ending with the given string
	"""
	slug_not_ends_with: String
	publishedBy: UserWhereInput
	updatedBy: UserWhereInput
	createdBy: UserWhereInput
	cover: AssetWhereInput
	scheduledIn_every: ScheduledOperationWhereInput
	scheduledIn_some: ScheduledOperationWhereInput
	scheduledIn_none: ScheduledOperationWhereInput
}

enum ThoughtOrderByInput {
	publishedAt_ASC
	publishedAt_DESC
	updatedAt_ASC
	updatedAt_DESC
	createdAt_ASC
	createdAt_DESC
	id_ASC
	id_DESC
	title_ASC
	title_DESC
	slug_ASC
	slug_DESC
	introduction_ASC
	introduction_DESC
}

input ThoughtUpdateInput {
	"""
	title input for default locale (en)
	"""
	title: String
	slug: String
	"""
	introduction input for default locale (en)
	"""
	introduction: String
	"""
	body input for default locale (en)
	"""
	body: RichTextAST
	location: LocationInput
	cover: AssetUpdateOneInlineInput
	"""
	Manage document localizations
	"""
	localizations: ThoughtUpdateLocalizationsInput
}

input ThoughtUpdateLocalizationDataInput {
	title: String
	introduction: String
	body: RichTextAST
}

input ThoughtUpdateLocalizationInput {
	data: ThoughtUpdateLocalizationDataInput!
	locale: Locale!
}

input ThoughtUpdateLocalizationsInput {
	"""
	Localizations to create
	"""
	create: [ThoughtCreateLocalizationInput!]
	"""
	Localizations to update
	"""
	update: [ThoughtUpdateLocalizationInput!]
	upsert: [ThoughtUpsertLocalizationInput!]
	"""
	Localizations to delete
	"""
	delete: [Locale!]
}

input ThoughtUpdateManyInlineInput {
	"""
	Create and connect multiple Thought documents
	"""
	create: [ThoughtCreateInput!]
	"""
	Connect multiple existing Thought documents
	"""
	connect: [ThoughtConnectInput!]
	"""
	Override currently-connected documents with multiple existing Thought documents
	"""
	set: [ThoughtWhereUniqueInput!]
	"""
	Update multiple Thought documents
	"""
	update: [ThoughtUpdateWithNestedWhereUniqueInput!]
	"""
	Upsert multiple Thought documents
	"""
	upsert: [ThoughtUpsertWithNestedWhereUniqueInput!]
	"""
	Disconnect multiple Thought documents
	"""
	disconnect: [ThoughtWhereUniqueInput!]
	"""
	Delete multiple Thought documents
	"""
	delete: [ThoughtWhereUniqueInput!]
}

input ThoughtUpdateManyInput {
	"""
	introduction input for default locale (en)
	"""
	introduction: String
	"""
	body input for default locale (en)
	"""
	body: RichTextAST
	location: LocationInput
	"""
	Optional updates to localizations
	"""
	localizations: ThoughtUpdateManyLocalizationsInput
}

input ThoughtUpdateManyLocalizationDataInput {
	introduction: String
	body: RichTextAST
}

input ThoughtUpdateManyLocalizationInput {
	data: ThoughtUpdateManyLocalizationDataInput!
	locale: Locale!
}

input ThoughtUpdateManyLocalizationsInput {
	"""
	Localizations to update
	"""
	update: [ThoughtUpdateManyLocalizationInput!]
}

input ThoughtUpdateManyWithNestedWhereInput {
	"""
	Document search
	"""
	where: ThoughtWhereInput!
	"""
	Update many input
	"""
	data: ThoughtUpdateManyInput!
}

input ThoughtUpdateOneInlineInput {
	"""
	Create and connect one Thought document
	"""
	create: ThoughtCreateInput
	"""
	Update single Thought document
	"""
	update: ThoughtUpdateWithNestedWhereUniqueInput
	"""
	Upsert single Thought document
	"""
	upsert: ThoughtUpsertWithNestedWhereUniqueInput
	"""
	Connect existing Thought document
	"""
	connect: ThoughtWhereUniqueInput
	"""
	Disconnect currently connected Thought document
	"""
	disconnect: Boolean
	"""
	Delete currently connected Thought document
	"""
	delete: Boolean
}

input ThoughtUpdateWithNestedWhereUniqueInput {
	"""
	Unique document search
	"""
	where: ThoughtWhereUniqueInput!
	"""
	Document to update
	"""
	data: ThoughtUpdateInput!
}

input ThoughtUpsertInput {
	"""
	Create document if it didn't exist
	"""
	create: ThoughtCreateInput!
	"""
	Update document if it exists
	"""
	update: ThoughtUpdateInput!
}

input ThoughtUpsertLocalizationInput {
	update: ThoughtUpdateLocalizationDataInput!
	create: ThoughtCreateLocalizationDataInput!
	locale: Locale!
}

input ThoughtUpsertWithNestedWhereUniqueInput {
	"""
	Unique document search
	"""
	where: ThoughtWhereUniqueInput!
	"""
	Upsert data
	"""
	data: ThoughtUpsertInput!
}

"""
This contains a set of filters that can be used to compare values internally
"""
input ThoughtWhereComparatorInput {
	"""
	This field can be used to request to check if the entry is outdated by internal comparison
	"""
	outdated_to: Boolean
}

"""
Identifies documents
"""
input ThoughtWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [ThoughtWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [ThoughtWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [ThoughtWhereInput!]
	documentInStages_every: ThoughtWhereStageInput
	documentInStages_some: ThoughtWhereStageInput
	documentInStages_none: ThoughtWhereStageInput
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	title: String
	"""
	All values that are not equal to given value.
	"""
	title_not: String
	"""
	All values that are contained in given list.
	"""
	title_in: [String]
	"""
	All values that are not contained in given list.
	"""
	title_not_in: [String]
	"""
	All values containing the given string.
	"""
	title_contains: String
	"""
	All values not containing the given string.
	"""
	title_not_contains: String
	"""
	All values starting with the given string.
	"""
	title_starts_with: String
	"""
	All values not starting with the given string.
	"""
	title_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	title_ends_with: String
	"""
	All values not ending with the given string
	"""
	title_not_ends_with: String
	slug: String
	"""
	All values that are not equal to given value.
	"""
	slug_not: String
	"""
	All values that are contained in given list.
	"""
	slug_in: [String]
	"""
	All values that are not contained in given list.
	"""
	slug_not_in: [String]
	"""
	All values containing the given string.
	"""
	slug_contains: String
	"""
	All values not containing the given string.
	"""
	slug_not_contains: String
	"""
	All values starting with the given string.
	"""
	slug_starts_with: String
	"""
	All values not starting with the given string.
	"""
	slug_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	slug_ends_with: String
	"""
	All values not ending with the given string
	"""
	slug_not_ends_with: String
	introduction: String
	"""
	All values that are not equal to given value.
	"""
	introduction_not: String
	"""
	All values that are contained in given list.
	"""
	introduction_in: [String]
	"""
	All values that are not contained in given list.
	"""
	introduction_not_in: [String]
	"""
	All values containing the given string.
	"""
	introduction_contains: String
	"""
	All values not containing the given string.
	"""
	introduction_not_contains: String
	"""
	All values starting with the given string.
	"""
	introduction_starts_with: String
	"""
	All values not starting with the given string.
	"""
	introduction_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	introduction_ends_with: String
	"""
	All values not ending with the given string
	"""
	introduction_not_ends_with: String
	publishedBy: UserWhereInput
	updatedBy: UserWhereInput
	createdBy: UserWhereInput
	cover: AssetWhereInput
	scheduledIn_every: ScheduledOperationWhereInput
	scheduledIn_some: ScheduledOperationWhereInput
	scheduledIn_none: ScheduledOperationWhereInput
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input ThoughtWhereStageInput {
	"""
	Logical AND on all given filters.
	"""
	AND: [ThoughtWhereStageInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [ThoughtWhereStageInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [ThoughtWhereStageInput!]
	"""
	Specify the stage to compare with
	"""
	stage: Stage
	"""
	This field contains fields which can be set as true or false to specify an internal comparison
	"""
	compareWithParent: ThoughtWhereComparatorInput
}

"""
References Thought record uniquely
"""
input ThoughtWhereUniqueInput {
	id: ID
	slug: String
}

input UnpublishLocaleInput {
	"""
	Locales to unpublish
	"""
	locale: Locale!
	"""
	Stages to unpublish selected locales from
	"""
	stages: [Stage!]!
}

"""
User system model
"""
type User implements Node {
	"""
	System stage field
	"""
	stage: Stage!
	"""
	Get the document in other stages
	"""
	documentInStages(
		"""
		Potential stages that should be returned
		"""
		stages: [Stage!]! = [DRAFT, PUBLISHED]
		"""
		Decides if the current stage should be included or not
		"""
		includeCurrent: Boolean! = false
		"""
		Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
		"""
		inheritLocale: Boolean! = false
	): [User!]!
	"""
	Flag to determine if user is active or not
	"""
	isActive: Boolean!
	"""
	Profile Picture url
	"""
	picture: String
	"""
	The username
	"""
	name: String!
	"""
	The time the document was published. Null on documents in draft stage.
	"""
	publishedAt: DateTime
	"""
	The time the document was updated
	"""
	updatedAt: DateTime!
	"""
	The time the document was created
	"""
	createdAt: DateTime!
	"""
	The unique identifier
	"""
	id: ID!
	"""
	User Kind. Can be either MEMBER, PAT or PUBLIC
	"""
	kind: UserKind!
}

input UserConnectInput {
	"""
	Document to connect
	"""
	where: UserWhereUniqueInput!
	"""
	Allow to specify document position in list of connected documents, will default to appending at end of list
	"""
	position: ConnectPositionInput
}

"""
A connection to a list of items.
"""
type UserConnection {
	"""
	Information to aid in pagination.
	"""
	pageInfo: PageInfo!
	"""
	A list of edges.
	"""
	edges: [UserEdge!]!
	aggregate: Aggregate!
}

input UserCreateManyInlineInput {
	"""
	Connect multiple existing User documents
	"""
	connect: [UserWhereUniqueInput!]
}

input UserCreateOneInlineInput {
	"""
	Connect one existing User document
	"""
	connect: UserWhereUniqueInput
}

"""
An edge in a connection.
"""
type UserEdge {
	"""
	The item at the end of the edge.
	"""
	node: User!
	"""
	A cursor for use in pagination.
	"""
	cursor: String!
}

"""
System User Kind
"""
enum UserKind {
	MEMBER
	PAT
	PUBLIC
	WEBHOOK
}

"""
Identifies documents
"""
input UserManyWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [UserWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [UserWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [UserWhereInput!]
	documentInStages_every: UserWhereStageInput
	documentInStages_some: UserWhereStageInput
	documentInStages_none: UserWhereStageInput
	isActive: Boolean
	"""
	All values that are not equal to given value.
	"""
	isActive_not: Boolean
	picture: String
	"""
	All values that are not equal to given value.
	"""
	picture_not: String
	"""
	All values that are contained in given list.
	"""
	picture_in: [String]
	"""
	All values that are not contained in given list.
	"""
	picture_not_in: [String]
	"""
	All values containing the given string.
	"""
	picture_contains: String
	"""
	All values not containing the given string.
	"""
	picture_not_contains: String
	"""
	All values starting with the given string.
	"""
	picture_starts_with: String
	"""
	All values not starting with the given string.
	"""
	picture_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	picture_ends_with: String
	"""
	All values not ending with the given string
	"""
	picture_not_ends_with: String
	name: String
	"""
	All values that are not equal to given value.
	"""
	name_not: String
	"""
	All values that are contained in given list.
	"""
	name_in: [String]
	"""
	All values that are not contained in given list.
	"""
	name_not_in: [String]
	"""
	All values containing the given string.
	"""
	name_contains: String
	"""
	All values not containing the given string.
	"""
	name_not_contains: String
	"""
	All values starting with the given string.
	"""
	name_starts_with: String
	"""
	All values not starting with the given string.
	"""
	name_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	name_ends_with: String
	"""
	All values not ending with the given string
	"""
	name_not_ends_with: String
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	kind: UserKind
	"""
	All values that are not equal to given value.
	"""
	kind_not: UserKind
	"""
	All values that are contained in given list.
	"""
	kind_in: [UserKind]
	"""
	All values that are not contained in given list.
	"""
	kind_not_in: [UserKind]
}

enum UserOrderByInput {
	isActive_ASC
	isActive_DESC
	picture_ASC
	picture_DESC
	name_ASC
	name_DESC
	publishedAt_ASC
	publishedAt_DESC
	updatedAt_ASC
	updatedAt_DESC
	createdAt_ASC
	createdAt_DESC
	id_ASC
	id_DESC
	kind_ASC
	kind_DESC
}

input UserUpdateManyInlineInput {
	"""
	Connect multiple existing User documents
	"""
	connect: [UserConnectInput!]
	"""
	Override currently-connected documents with multiple existing User documents
	"""
	set: [UserWhereUniqueInput!]
	"""
	Disconnect multiple User documents
	"""
	disconnect: [UserWhereUniqueInput!]
}

input UserUpdateOneInlineInput {
	"""
	Connect existing User document
	"""
	connect: UserWhereUniqueInput
	"""
	Disconnect currently connected User document
	"""
	disconnect: Boolean
}

"""
This contains a set of filters that can be used to compare values internally
"""
input UserWhereComparatorInput {
	"""
	This field can be used to request to check if the entry is outdated by internal comparison
	"""
	outdated_to: Boolean
}

"""
Identifies documents
"""
input UserWhereInput {
	"""
	Contains search across all appropriate fields.
	"""
	_search: String
	"""
	Logical AND on all given filters.
	"""
	AND: [UserWhereInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [UserWhereInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [UserWhereInput!]
	documentInStages_every: UserWhereStageInput
	documentInStages_some: UserWhereStageInput
	documentInStages_none: UserWhereStageInput
	isActive: Boolean
	"""
	All values that are not equal to given value.
	"""
	isActive_not: Boolean
	picture: String
	"""
	All values that are not equal to given value.
	"""
	picture_not: String
	"""
	All values that are contained in given list.
	"""
	picture_in: [String]
	"""
	All values that are not contained in given list.
	"""
	picture_not_in: [String]
	"""
	All values containing the given string.
	"""
	picture_contains: String
	"""
	All values not containing the given string.
	"""
	picture_not_contains: String
	"""
	All values starting with the given string.
	"""
	picture_starts_with: String
	"""
	All values not starting with the given string.
	"""
	picture_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	picture_ends_with: String
	"""
	All values not ending with the given string
	"""
	picture_not_ends_with: String
	name: String
	"""
	All values that are not equal to given value.
	"""
	name_not: String
	"""
	All values that are contained in given list.
	"""
	name_in: [String]
	"""
	All values that are not contained in given list.
	"""
	name_not_in: [String]
	"""
	All values containing the given string.
	"""
	name_contains: String
	"""
	All values not containing the given string.
	"""
	name_not_contains: String
	"""
	All values starting with the given string.
	"""
	name_starts_with: String
	"""
	All values not starting with the given string.
	"""
	name_not_starts_with: String
	"""
	All values ending with the given string.
	"""
	name_ends_with: String
	"""
	All values not ending with the given string
	"""
	name_not_ends_with: String
	publishedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	publishedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	publishedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	publishedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	publishedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	publishedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	publishedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	publishedAt_gte: DateTime
	updatedAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	updatedAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	updatedAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	updatedAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	updatedAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	updatedAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	updatedAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	updatedAt_gte: DateTime
	createdAt: DateTime
	"""
	All values that are not equal to given value.
	"""
	createdAt_not: DateTime
	"""
	All values that are contained in given list.
	"""
	createdAt_in: [DateTime]
	"""
	All values that are not contained in given list.
	"""
	createdAt_not_in: [DateTime]
	"""
	All values less than the given value.
	"""
	createdAt_lt: DateTime
	"""
	All values less than or equal the given value.
	"""
	createdAt_lte: DateTime
	"""
	All values greater than the given value.
	"""
	createdAt_gt: DateTime
	"""
	All values greater than or equal the given value.
	"""
	createdAt_gte: DateTime
	id: ID
	"""
	All values that are not equal to given value.
	"""
	id_not: ID
	"""
	All values that are contained in given list.
	"""
	id_in: [ID]
	"""
	All values that are not contained in given list.
	"""
	id_not_in: [ID]
	"""
	All values containing the given string.
	"""
	id_contains: ID
	"""
	All values not containing the given string.
	"""
	id_not_contains: ID
	"""
	All values starting with the given string.
	"""
	id_starts_with: ID
	"""
	All values not starting with the given string.
	"""
	id_not_starts_with: ID
	"""
	All values ending with the given string.
	"""
	id_ends_with: ID
	"""
	All values not ending with the given string
	"""
	id_not_ends_with: ID
	kind: UserKind
	"""
	All values that are not equal to given value.
	"""
	kind_not: UserKind
	"""
	All values that are contained in given list.
	"""
	kind_in: [UserKind]
	"""
	All values that are not contained in given list.
	"""
	kind_not_in: [UserKind]
}

"""
The document in stages filter allows specifying a stage entry to cross compare the same document between different stages
"""
input UserWhereStageInput {
	"""
	Logical AND on all given filters.
	"""
	AND: [UserWhereStageInput!]
	"""
	Logical OR on all given filters.
	"""
	OR: [UserWhereStageInput!]
	"""
	Logical NOT on all given filters combined by AND.
	"""
	NOT: [UserWhereStageInput!]
	"""
	Specify the stage to compare with
	"""
	stage: Stage
	"""
	This field contains fields which can be set as true or false to specify an internal comparison
	"""
	compareWithParent: UserWhereComparatorInput
}

"""
References User record uniquely
"""
input UserWhereUniqueInput {
	id: ID
}

type Version {
	id: ID!
	stage: Stage!
	revision: Int!
	createdAt: DateTime!
}

input VersionWhereInput {
	id: ID!
	stage: Stage!
	revision: Int!
}
